Format: 1.8
Date: Sat, 10 Aug 2024 14:04:55 +0300
Source: linux-android-htc-oce
Binary: linux-bootimage-3.18-140-htc-oce linux-bootimage-htc-oce linux-headers-3.18-140-htc-oce linux-headers-htc-oce linux-image-3.18-140-htc-oce linux-image-htc-oce
Architecture: arm64
Version: 0.0.0+git20240810110455.86d5787.droidian
Distribution: trixie
Urgency: medium
Maintainer: Droidian porters <info@droidian.org>
Changed-By: MHS195 <79396663+MHS195@users.noreply.github.com>
Description:
 linux-bootimage-3.18-140-htc-oce - Linux kernel for HTC U-Ultra - Android Boot Image
 linux-bootimage-htc-oce - Linux kernel for HTC U-Ultra - Android Boot Image  (latest)
 linux-headers-3.18-140-htc-oce - Linux kernel for HTC U-Ultra - Headers
 linux-headers-htc-oce - Linux kernel for HTC U-Ultra - Headers (latest)
 linux-image-3.18-140-htc-oce - Linux kernel for HTC U-Ultra
 linux-image-htc-oce - Linux kernel for HTC U-Ultra (latest)
Changes:
 linux-android-htc-oce (0.0.0+git20240810110455.86d5787.droidian) trixie; urgency=medium
 .
   [ MHS195 ]
   * added droidian oce config
   * Update droidian_defconfig
 .
   [ TARKZiM ]
   * Initial import from ocedugl-3.18.63-perf-gdf33270
   * oce: defconfig: Enable RCU_BOOST
   * oce: defconfig: correct RCU PROI flag
   * oce: defconfig: enable wireguard
   * oce: defconfig: Enable optimized cryptographic algorithms
   * kernel: sched: core: fix build
   * oce: fix build
   * Revert "pme: disable unused dtbs"
   * driver: siw: sw49407 disable second screen area
   * drivers: misc: fix FPC driver for OCE
   * oce: defconfig update for gov
   * Revert "driver: siw: sw49407 disable second screen area"
   * oce: enable CONFIG_AIO
   * oce: defconfig: enable KCAL control
   * oce: drivers: KCAL: set default value of RGB to 220 for preventing screen burn
   * oce: defconfig: update for FORCE_FAST_CHARGE & disable CPU_BOOST
   * oce: defconfig: clean up
   * Revert "patch-3.18.129-131"
   * oce: defconfig updates for CPU freq.
   * Revert "oce: drivers: KCAL: set default value of RGB to 220 for preventing screen burn"
   * oce: defconfig: enable Sound control
   * Revert "Revert "pme: disable unused dtbs""
   * defconfig: oce: remove duplicated flags
   * defconfig: oce: enable BOEFFLA_WL_BLOCKER
   * defconfig: oce: enable BOEFFLA_WL_BLOCKER
   * net: bluetooth: fix compilation after 3.18.138 merge
   * net: bluetooth: fix compilation after 3.18.138 merge
   * Revert "sched: Do not re-read h_load_next during hierarchical load calculation"
   * Revert "sched: Do not re-read h_load_next during hierarchical load calculation"
   * scripts: Remove wireguard importer scripts
   * oce: Remove wireguard and importer scripts
   * defconfig: oce: Enable CONFIG_CRYPTO_SHA512
   * defconfig: oce: Enable CONFIG_CRYPTO_SHA512
   * Revert "BACKPORT: bcmdhd_4359: fix possible buffer overflow in wl_cfg80211_mgmt_tx()"
   * net: wireless: bcmdhd_4359: Adjust for our usecases
   * net: wireless: bcmdhd_4359: Adjust for our usecases
   * Merge branch 'q10.0' of https://github.com/Siluxsept/kernel_htc_oce into lineage-17.1
   * sensors: CwMcuSensor: Ignore Significant Motion Sensor
   * Revert "Merge branch 'q10.0' of https://github.com/Siluxsept/kernel_htc_oce into lineage-17.1"
   * Revert "sensors: CwMcuSensor: Ignore Significant Motion Sensor"
 .
   [ fagyi ]
   * pme: disable unused dtbs
   * oce: defconfig: Enable EAS
   * pme: fix build: remove derp's
   * pme: bump binder from upstream
   * pme: fix build error's
   * patch-3.18.104-105
   * patch-3.18.105-106
   * patch-3.18.106-107
   * patch-3.18.107-108
   * patch-3.18.108-109
   * patch-3.18.109-110
   * patch-3.18.110-111
   * patch-3.18.111-112
   * patch-3.18.112-113
   * patch-3.18.113-114
   * Revert "usb: do not reset if a low-speed or full-speed device timed out"
   * oce: disable htc pnp manager
   * arm64: mmu: Fix alloc_init_pud section mismatches
   * patch-3.18.114-115
   * pme: add back mmput_async
   * patch-3.18.115-116
   * patch-3.18.116-117
   * pme: EAS: kernel: sync with marlin
   * patch-3.18.117-118
   * patch-3.18.118-119
   * patch-3.18.119-120
   * patch-3.18.121-122
   * fix build after merge the 122 of kernel tag from caf
   * merge sdcardfs to the latest
   * patch-3.18.122-123
   * patch-3.18.123-124
   * patch-3.18.126-127
   * pme: revert zram changes from 127 patch
   * pme: drivers: ipa: merge to the latest P version
   * Revert "FROMLIST: arm64: mm: Map entry trampoline into trampoline and kernel page tables"
   * Revert "BACKPORT: arm64: split thread_info from task stack"
   * pme: drivers: cpufreq update to latest marlin spec
   * pme: sched: update from marlin
   * oce: drivers ports from marlin
   * patch-3.18.127-128
   * pme: revert drivers/tty commits to make it BT working
   * patch-3.18.128-129
   * pme: remove not needed ramdump for rpm
   * patch-3.18.129-131
   * sched: schedutil: update to the fully working stage
   * sched: schedutil: fix tunables & tune default setting
   * patch-3.18.129-131
   * Revert "exec: avoid gcc-8 warning for get_task_comm"
   * patch-3.18.131-132
   * pme: zram: sync with franco
   * pme: zram: sync with franco part 2
   * pme: ARM64: Fix merge derp
   * kernel: SU cleanup / missing few things
   * kernel: remove redefinitions
   * Bluetooth: hidp: fix device disconnect on idle timeout
   * PM / s2idle: Clear the events_check_enabled flag
   * Bluetooth: hidp: fix device disconnect on idle timeout
   * PM / s2idle: Clear the events_check_enabled flag
   * net: Import WireGuard version 0.0.20190702
   * net: switch WireGuard version to 0.0.20190602
   * net: Import WireGuard version 0.0.20190702
   * net: switch WireGuard version to 0.0.20190602
 .
   [ Siluxsept ]
   * drivers: base/firmware_class.c: remove duplicate lines
   * oce: defconfig: add CONFIG_HAVE_ARCH_AUDITSYSCALL=y
   * Revert "defconfig: oce: Enable dm-verity configs"
   * Revert "ANDROID: dm: Always mount as linear target"
   * Revert "dts: msm8996-ufs: Remove early system mount"
   * Revert "rtc: qpnp: Adjust power-on alarm time."
   * Revert "PM / s2idle: Clear the events_check_enabled flag"
   * Revert "Bluetooth: hidp: fix device disconnect on idle timeout"
   * Revert "UPSTREAM: rculist: Consolidate DEBUG_LIST for list_add_rcu()"
   * Revert "dtc: Improve portability"
   * Revert "UPSTREAM: syscalls: Use CHECK_DATA_CORRUPTION for addr_limit_user_check"
   * Revert "soc: qcom: Remove smp2p test support"
   * Revert "qseecom: Fix clang compilation in qseecom driver"
   * Revert "msm: secure_buffer: Limit continuous time spent in hypervisor"
 .
   [ Anmolpreet Kaur ]
   * qseecom: Fix clang compilation in qseecom driver
 .
   [ Greg Hackmann ]
   * ANDROID: sched: fix duplicate sched_group_energy const specifiers
   * arm64: mm: move dma_overlap() out of init section
   * net: wireless: bcmdhd: fix use-after-free in _dhd_pno_get_for_batch()
   * net: wireless: bcmdhd: fix use-after-free in _dhd_pno_get_for_batch()
   * drivers: media: msm: don't use nested functions
   * ANDROID: Kbuild, LLVMLinux: allow overriding clang target triple
 .
   [ Masahiro Yamada ]
   * UPSTREAM: kbuild: merge bounds.h and asm-offsets.h rules
   * UPSTREAM: kbuild: remove redundant line from bounds.h/asm-offsets.h
   * UPSTREAM: kbuild: do not add $(bounds-file) and $(offsets-file) to targets
   * UPSTREAM: kbuild: consolidate redundant sed script ASM offset generation
   * UPSTREAM: kbuild: drop -Wno-unknown-warning-option from clang options
   * BACKPORT: kbuild: simplify ld-option implementation
   * BACKPORT: modpost: file2alias: go back to simple devtable lookup
   * UPSTREAM: modpost: file2alias: check prototype of handler
   * BACKPORT: kbuild: move cc-option and cc-disable-warning after incl. arch Makefile
   * BACKPORT: kbuild: add -no-integrated-as Clang option unconditionally
   * BACKPORT: kbuild: consolidate Clang compiler flags
   * BACKPORT: kbuild: add all Clang-specific flags unconditionally
   * BACKPORT: kbuild: initialize CLANG_FLAGS correctly in the top Makefile
 .
   [ Nathan Chancellor ]
   * net/wireguard: add wireguard importer
   * staging: ion: msm: Apply d82ad70e8aff to msm_ion_custom_ioctl
   * Merge 3.18.125 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.126 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.133 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.134 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.135 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.136 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.137 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.137 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.138 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.138 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.139 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.139 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.140 into kernel.lnx.3.18.r34-rel
   * Merge 3.18.140 into kernel.lnx.3.18.r34-rel
   * Makefile: Silence x.509 warning
   * Makefile: Silence x.509 warning
   * msm: mdss: debug: Fix position of const qualifier in string arrays
   * msm: mdss: Fix position of const qualifier in mdss_panel2str
   * uapi: video: msm: Fix header guard
   * msm: mdss: Remove pointless NULL check in pp_ad_calc_bl
   * msm: mdss: Remove unnecessary parentheses in mdss_check_dsi_ctrl_status
   * msm: mdss: Remove unnecessary parentheses in is_valid_calib_dspp_addr
   * mhi: core: Remove second const qualifier in struct mhi_client_info_t
   * clk: msm: Don't implicitly convert double to boolean in FIXDIV macros
   * clk: msm: clock-cpu-8939: Fix logical not location
   * clk: msm: clock-cpu-8953: Fix location of second const qualifier for mux_names
   * ASoC: wcd_cpe_services: Use proper enums
   * i2c-msm-v2: Fix location of second const qualifier for i2c_msm_adapter_name
   * ASoC: msm: qdsp6v2: Remove duplicate const qualifiers
   * ASoC: msm-audio-pinctrl: Fix strlcpy usage in msm_gpioset_initialize
   * ASoC: msm-pcm-voice-v2: Fix location of second const qualifier for  ty_mode
   * iommu: msm: Explicitly make CB_TTBR0_ADDR_MASK an unsigned literal
   * msm: camera: Remove pointless NULL checks in msm_camera_{get,put}_clk_info
   * nl80211: Disable enum-conversion warning
   * msm: camera: Remove pointless NULL checks in {__,}msm_remove_session_cmd_ack_q
   * msm: camera: Remove pointless NULL checks in msm_flash_i2c_release
   * mmc: card: Use bitwise AND instead of logical AND in validate_packed_commands_settings
   * ASoC: msm: qdsp6v2: Don't use enum as a NULL pointer
   * msm: camera: Remove unnecessary parentheses in msm_cam_sensor_handle_reg_gpio
   * msm: msm_bus: Remove unnecessary parentheses in get_node
   * soc: qcom: msm_bus: Remove unnecessary self assignment in msm_bus_dbg_update_request_write
   * msm: ipa_v2: Use proper enum in wwan_add_ul_flt_rule_to_ipa
   * power: bcl: Remove useless NULL checks against thresh array in msm_bcl_enable
   * usb: bam: Disable enum-conversion warning
   * ANDROID: xt_qtaguid: Remove unnecessary null checks to ifa_label
   * ANDROID: xt_qtaguid: Remove unnecessary null checks to device's name
   * thermal: tsens: Avoid implicit enum conversions in th_state fields
   * thermal: qpnp-temp-alarm: Remove useless NULL check in qpnp_tm_probe
   * soc: qcom: spm: Remove useless NULL check in msm_spm_drv_flush_shadow
   * usb: gadget: f_uac2: Fix comparison in in_rq_range
   * usb: gadget: f_uac2: Remove unused static variable
   * tty: msm_smd_tty: Remove useless NULL checks
   * soc: qcom: glink_debugfs: Fix strlcpy usage
   * usb: gadget: ci13xxx: Remove unnecessary parentheses in ep_dequeue
   * usb: gadget: u_bam: Remove unnecessary parentheses in gbam_alloc_skb_from_pool
   * usb: gadget: f_mbim: Use proper enum in mbim_peripheral_ep_info
   * soc: q6dspv2: apr: Remove unnecessary parentheses in is_valid_calib_dspp_addr
   * soc: qcom: rpm_master_stat: Fix strlcpy usage
   * drivers: soc: qcom: system_stats: Fix strlcpy usage
   * soc: qcom: msm_performance: Fix cpumask checks in init_cluster_control
   * esoc: Remove unnecessary const qualifiers
   * ecryptfs: Remove two pointless NULL checks in ecryptfs_dump_cipher
   * input: atmel_maxtouch_ts: Remove pointless NULL check in mxt_load_cfg
   * msm: mhi: Remove second const qualifier for of_node
   * msm: mhi: Remove unnecessary second const qualifier for mhi_state_transitions
   * soc: qcom: service-locator: Remove pointless NULL checks in get_service_location
   * ASoC: wcd_cpe_core: Fix buffer overflow in wcd_cpe_init
   * ASoC: wsa881x: Fix buffer overflow in wsa881x_swrslave_reg_show
   * UPSTREAM: kbuild: Don't try to add '-fcatch-undefined-behavior' flag
   * BACKPORT: kbuild: Add -Werror=unknown-warning-option to CLANG_FLAGS
 .
   [ Nick Desaulniers ]
   * ion: system_secure_heap: fix constant logical comparison bug
   * msm: thermal: validate userspace args to prevent buffer overflow.
   * arm64/configs: oce: enable ext4 encryption and savedefconfig
   * arm64/configs: oce: enable ext4 encryption and savedefconfig
   * BACKPORT: kbuild: fix linker feature test macros when cross compiling with Clang
   * BACKPORT: kbuild: clang: remove crufty HOSTCFLAGS
   * BACKPORT: arm64: avoid overflow in VA_START and PAGE_OFFSET
   * UPSTREAM: Input: mousedev - fix implicit conversion warning
   * UPSTREAM: netfilter: nf_nat_h323: fix logical-not-parentheses warning
   * Revert "mmc: sdio: Update the buffer copy to include the last char"
   * Revert "mmc: sdio: Update the argument for data copy"
   * Revert "mmc: Fixing few warning messages."
   * BACKPORT: kbuild: clang: choose GCC_TOOLCHAIN_DIR not on LD
 .
   [ Joel Stanley ]
   * BACKPORT: Makefile: Export clang toolchain variables
 .
   [ Stefan Agner ]
   * BACKPORT: kbuild: set no-integrated-as before incl. arch Makefile
   * BACKPORT: kbuild: allow to use GCC toolchain not in Clang search path
 .
   [ Chris Fries ]
   * kernel: Add CC_WERROR config to turn warnings into errors
   * BACKPORT: kbuild: Set KBUILD_CFLAGS before incl. arch Makefile
 .
   [ David Lin ]
   * UPSTREAM: kbuild: clang: fix build failures with sparse check
 .
   [ Ard Biesheuvel ]
   * crypto: arm64/crc32 - bring in line with generic CRC32
   * arm64/crypto: issue aese/aesmc instructions in pairs
   * arm64: crypto: increase AES interleave to 4x
   * arm64/crypto: use crypto instructions to generate AES key schedule
   * arm64: crypto: reduce priority of core AES cipher
   * UPSTREAM: crypto: sha1 - implement base layer for SHA-1
   * UPSTREAM: crypto: sha256 - implement base layer for SHA-256
   * UPSTREAM: crypto: sha512 - implement base layer for SHA-512
   * UPSTREAM: crypto: sha1-generic - move to generic glue implementation
   * UPSTREAM: crypto: sha256-generic - move to generic glue implementation
   * UPSTREAM: crypto: sha512-generic - move to generic glue implementation
   * UPSTREAM: crypto: arm64/sha1-ce - move SHA-1 ARMv8 implementation to base layer
   * UPSTREAM: crypto: arm64/sha1-ce - fix for big endian
   * UPSTREAM: crypto: arm64/sha2-ce - move SHA-224/256 ARMv8 implementation to base layer
   * UPSTREAM: crypto: arm64/sha2-ce - fix for big endian
   * UPSTREAM: crypto: arm64/sha - avoid non-standard inline asm tricks
   * UPSTREAM: crypto: arm64/aes-ce - fix for big endian
   * UPSTREAM: crypto: arm64/aes-ccm-ce: fix for big endian
   * UPSTREAM: crypto: arm64/aes-ce-cipher - match round key endianness with generic code
   * UPSTREAM: crypto: arm64/aes-ce-cipher: add non-SIMD generic fallback
   * UPSTREAM: crypto: arm64/aes-ce-cipher - move assembler code to .S file
   * BACKPORT: crypto: arm64/aes - add scalar implementation
 .
   [ Vinícius Tinti ]
   * BACKPORT: kbuild: Add support to generate LLVM assembly files
 .
   [ Behan Webster ]
   * UPSTREAM: kbuild: Add better clang cross build support
 .
   [ Michal Marek ]
   * UPSTREAM: kbuild: Don't reset timestamps in include/generated if not needed
   * BACKPORT: kbuild: Fix clang detection
 .
   [ Paul Cercueil ]
   * BACKPORT: Makefile: Fix detection of clang when cross-compiling
 .
   [ Arnd Bergmann ]
   * sched/rt: Hide the push_irq_work_func() declaration
   * UPSTREAM: modules: mark __inittest/__exittest as __maybe_unused
   * UPSTREAM: Kbuild: provide a __UNIQUE_ID for clang
   * BACKPORT: lkdtm: hide stack overflow warning for corrupt-stack test
 .
   [ Michael Ellerman ]
   * BACKPORT: lkdtm: Prevent the compiler from optimising lkdtm_CORRUPT_STACK()
 .
   [ Ghanim Fodi ]
   * msm: ipa: Fix the handling of default IPA header
   * msm: ipa: Prevent deletion of the default route rule
   * msm: ipa3: Explicitly enable IPA DMA for IPA MHI
   * msm: ipa3: Do not configure USB pipes in MHI mode
   * msm: ipa3: Fix IPA aggregation register val-mask calculation
   * msm: ipa3: Use bitwise instead of logical operator
 .
   [ Praveen Kurapati ]
   * msm: ipa: Fix to validate the buffer size
   * msm: ipa3: Fix to validate the buffer size
   * msm: ipa3: Fix to validate the buffer size
   * msm: ipa3: Fix compilation errors after enabling LLVM
 .
   [ Shadab Naseem ]
   * sysmon-qmi: Fix compilation error while using LLVM
 .
   [ Priyanka Gujjula ]
   * msm: vidc: Avoid information leak while accessing the packet
   * msm: vidc: Ensure size of the data available before typecasting
   * msm: vidc: Resolve clang compilation error
 .
   [ Jishnu Prakash ]
   * drivers: hwmon: Fix compilation errors in ADC for kernel 4.9
 .
   [ Zhen Kong ]
   * crypto: msm: update QTI crypto drivers for msm-4.14
 .
   [ Michael Davidson ]
   * UPSTREAM: kbuild: clang: add -no-integrated-as to KBUILD_[AC]FLAGS
   * BACKPORT: misc: lkdtm: Add volatile to intentional NULL pointer reference
 .
   [ Nicolas Iooss ]
   * UPSTREAM: mm: kmemleak: mark kmemleak_init prototype as __init
 .
   [ Daniel Borkmann ]
   * UPSTREAM: kbuild: disable clang's default use of -fmerge-all-constants
   * UPSTREAM: lib: crc32: constify crc32 lookup table
 .
   [ Kaixu Xia ]
   * UPSTREAM: coresight: fix the replicator subtype value
 .
   [ Matthias Kaehlcke ]
   * BACKPORT: kbuild: Consolidate header generation from ASM offset information
   * UPSTREAM: kbuild: clang: Disable 'address-of-packed-member' warning
   * STABLE: arm64: Disable asm-operand-width warning for clang
   * UPSTREAM: selinux: Remove unnecessary check of array base in selinux_set_mapping()
   * UPSTREAM: cpumask: Add helper cpumask_available()
   * BACKPORT: genirq: Use cpumask_available() for check of cpumask variable
   * UPSTREAM: jiffies.h: declare jiffies and jiffies_64 with ____cacheline_aligned_in_smp
   * UPSTREAM: frv: declare jiffies to be located in the .data section
   * BACKPORT: netfilter: ctnetlink: Make some parameters integer to avoid enum mismatch
   * UPSTREAM: dm ioctl: remove double parentheses
   * BACKPORT: PCI: Make PCI_ROM_ADDRESS_MASK a 32-bit constant
 .
   [ Richard Guy Briggs ]
   * UPSTREAM: audit: add tty field to LOGIN event
 .
   [ Davidlohr Bueso ]
   * UPSTREAM: audit: consolidate handling of mm->exe_file
   * UPSTREAM: audit: reduce mmap_sem hold for mm->exe_file
 .
   [ Rasmus Villemoes ]
   * UPSTREAM: tty: constify return type of tty_name
   * UPSTREAM: tty: return tty->name directly from tty_name
   * UPSTREAM: tty: remove buf parameter from tty_name()
 .
   [ Peter Zijlstra ]
   * sched/core: Validate rq_clock*() serialization
   * sched: Optimize freq invariant accounting
   * sched: Move the loadavg code to a more obvious location
   * sched/fair: Rename scale() to cap_scale()
   * sched/fair: Optimize __update_load_avg()
   * sched/fair: Optimize per entity utilization tracking
   * sched: Move code around
   * perf: Fix software migrate events
   * sched: Introduce the 'trace_sched_waking' tracepoint
   * sched/fair: Fix cfs_rq avg tracking underflow
   * sched/fair: Fix effective_load() to consistently use smoothed load
   * UPSTREAM: sched/fair: Fix post_init_entity_util_avg() serialization
   * sched/fair: Make the entity load aging on attaching tunable
   * UPSTREAM: sched/fair: Apply more PELT fixes
   * UPSTREAM: sched/fair: Improve PELT stuff some more
   * UPSTREAM: sched/fair: Fix effective_load() to consistently use smoothed load
   * UPSTREAM: sched/fair: Fix calc_cfs_shares() fixed point arithmetics width confusion
   * UPSTREAM: sched/fair: Fix and optimize the fork() path
   * sched/core: Remove unused argument from sched_class::task_move_group
   * sched/wait: Introduce TASK_NOLOAD and TASK_IDLE
   * BACKPORT: sched/fair: Fix PELT integrity for new tasks
   * sched: Implement lockless wake-queues
   * sched,rt: Remove return value from pull_rt_task()
   * sched/deadline: Fix stale yield state
   * sched/cpuset/pm: Fix cpuset vs. suspend-resume bugs
   * UPSTREAM: sched/core: Add missing update_rq_clock() call for task_hot()
   * sched/core: Rework rq->clock update skips
   * locking/static_keys: Add static_key_{en,dis}able() helpers
   * sched: Streamline the task migration locking a little
   * UPSTREAM: sched/core: Add missing update_rq_clock() in post_init_entity_util_avg()
   * sched/preempt: Add static_key() to preempt_notifiers
   * sched, preempt_notifier: separate notifier registration from static_key inc/dec
   * sched/core: Rework TASK_DEAD preemption exception
   * UPSTREAM: sched/core: Add missing update_rq_clock() in detach_task_cfs_rq()
   * UPSTREAM: sched/core: Add missing update_rq_clock() call in set_user_nice()
   * sched/wait: Fix a kthread race with wait_woken()
   * sched/wait: Fix a kthread race with wait_woken()
   * sched/core: Fix an SMP ordering race in try_to_wake_up() vs. schedule()
   * BACKPORT: sched/debug: Explicitly cast sched_feat() to bool
 .
   [ Mark Charlebois ]
   * BACKPORT: kbuild, LLVMLinux: Add -Werror to cc-option to support clang
   * UPSTREAM: fs: compat: Remove warning from COMPATIBLE_IOCTL
 .
   [ Phil Elwell ]
   * dtc: Improve portability
 .
   [ Sami Tolvanen ]
   * msm: sde: fix unaligned memory read
 .
   [ Prasad Sodagudi ]
   * sched: avoid pushing tasks to an offline CPU
   * drivers: soc: qcom: Fix register names used with proper macros
 .
   [ Satya Durga Srinivasu Prabhala ]
   * soc: qcom: scm: fix boot issue when compiled with clang
 .
   [ Arun Kumar Neelakantam ]
   * net: ipc_router: Fix buffer overflow during memcpy
   * net: ipc_router: Configure the IPC router NODE ID
   * soc: qcom: access smp2p_smem structure with I/O function
 .
   [ Sodagudi Prasad ]
   * UPSTREAM: kbuild: clang: disable unused variable warnings only when constant
 .
   [ Seung-Woo Kim ]
   * UPSTREAM: Kbuild: fix file name in comment about extra gcc checks
 .
   [ Alexander Potapenko ]
   * UPSTREAM: llist: clang: introduce member_address_is_nonnull()
 .
   [ David Rientjes ]
   * UPSTREAM: compiler, clang: suppress warning for unused static inline functions
   * UPSTREAM: compiler, clang: always inline when CONFIG_OPTIMIZE_INLINING is disabled
 .
   [ Linus Torvalds ]
   * UPSTREAM: compiler, clang: properly override 'inline' for clang
 .
   [ Jeroen Hofstee ]
   * UPSTREAM: kbuild: fix asm-offset generation to work with clang
 .
   [ Jonathan Liu ]
   * UPSTREAM: scripts/mkcompile_h: Remove trailing spaces from compiler version
 .
   [ Haibin Liu ]
   * msm: camera: Fix out of bound read access
   * msm: camera: Fix arbitrary kernel write
 .
   [ Vatsal Bucha ]
   * qdsp6v2: apr: check for packet size to header size comparison
   * dsp: q6voice: Check size of shared memory buffer before access
   * msm: qdsp6v2: Check size of payload before access
   * qdsp6v2: q6usm: Check size of payload before access
   * dsp: q6usm: Release spinlock before return if invalid payload size
   * qdsp6v2: q6usm: Check size of payload before access
 .
   [ Vipin Deep Kaur ]
   * i2c-msm-v2: Handle Null pointer de-reference
   * i2c-msm-v2: Add NULL pointer check on i2c messages
 .
   [ Linux Build Service Account ]
   * Merge "power: fg-util: Wait for soc_update completion upon timeout"
   * Merge "xfrm: validate template mode"
 .
   [ Sean Tranchetti ]
   * af_key: unconditionally clone on broadcast
   * xfrm: validate template mode
 .
   [ Maheshwar Ajja ]
   * msm: vidc: do not set video state to DEINIT very early
 .
   [ Hardik Arya ]
   * diag: Mark Buffer as NULL after freeing
   * soc: qcom: Validate read and write index before calculating ptr
   * diag: Update msg mask's ranges properly
   * diag: Prevent out-of-bound access while processing dci transaction
   * diag: Prevent out-of-bound access while processing userspace data
 .
   [ Ajay Agarwal ]
   * usb: gadget: Add support for IPC driver
   * soc: qcom: ipc_router: Update transport name from HSIC to USB
   * usb: gadget: f_ipc: Mark current state to CONNECTED before registering pdev
   * usb: gadget: f_ipc: Update online flag in set_alt/disable
   * usb: gadget: f_ipc: Clean up dead code
   * defconfig: msm: Enable IPC router USB transport driver on MDM9607
   * usb: gadget: f_ipc: Fix debugfs node null pointer dereference
   * defconfig: msm: Update APSS IPC node ID to 2 for MDM9607
   * usb: gadget: f_ipc: Re-initialize completion on every read/write
   * usb: gadget: f_ipc: Use timeout when waiting for request completion
   * usb: gadget: ci13xxx_udc: Fix test feature selector handling
 .
   [ Vijay kumar Tumati ]
   * msm: camera : Lock Implementation for avoid race condition
 .
   [ Srikanth Uyyala ]
   * msm:isp: correct the RDI2 base address
   * msm: camera: initialize qos_request object
   * msm: camera_v2: handle the error value returned during get clock
 .
   [ Kunlei Zhang ]
   * lsm: check payload size validity in lsm_event_detect_status_v3
 .
   [ kunleiz ]
   * lsm: check payload size validity before using it as array index
 .
   [ Sumalatha Malothu ]
   * msm:camera:isp: Fix array index bound checks
 .
   [ Eric Dumazet ]
   * tcp: introduce tcp_jiffies32
   * tcp_westwood: use tcp_jiffies32 instead of tcp_time_stamp
   * tcp: introduce tcp_jiffies32
   * tcp_westwood: use tcp_jiffies32 instead of tcp_time_stamp
   * tcp: pass previous skb to tcp_shifted_skb()
 .
   [ ArunPrakash ]
   * soc: qcom: glink_smd_xprt: Checking NULL pointer
 .
   [ Srinivasarao P ]
   * iommu/iommu-debug: fix buffer overflows in debugfs read functions
   * soc: qcom: remove hyp_assign based kernel protection
 .
   [ Patrick Daly ]
   * soc: qcom: secure_buffer: Fix memory leak
   * msm: secure_buffer: Limit continuous time spent in hypervisor
 .
   [ Manoj Prabhu B ]
   * memshare: Conditional free the clients allotted memory
   * diag: dci: Validate dci response length before parsing
   * diag: dci: Add missing length check before parsing the buffer
   * diag: Check command size against the minimum before parsing
   * diag: Prevent out of bound access while getting build mask
   * diag: Check buffer size against command structure size
   * diag: dci: Correct out of bounds check in processing dci pkt rsp
   * diag: dci: Prevent using uninitialized variables
 .
   [ Roberto Granados Dorado ]
   * ASoC: msm: qdsp6v2: Add control for capture channel map
 .
   [ Ashok Vuyyuru ]
   * msm: ipa3: Fix to recycle the skb before adding to recycle list
 .
   [ Rajesh Kemisetti ]
   * msm: kgsl: Log context type in case of GPU faults
   * msm: kgsl: Fix race condition between cmdbatch and context destroy
 .
   [ Chris Lew ]
   * soc: qcom: glink_smem: Initialize buffers
 .
   [ Mahesh Voorugonda ]
   * msm: vidc: Fix in setting output buffer count
   * vidc: Add checks to avoid OOB access
 .
   [ Rahul Shahare ]
   * AndroidKernel: Building dtb.img to support header version 2
 .
   [ Krishnamurthy K R ]
   * irq: Remove disable_depth and wake_depth entries when unregister irq proc
 .
   [ Soumya Managoli ]
   * asoc : msm: Fix zero size pointer issue
   * ASoC: msm: Modify buf size check to prevent OOB error
   * ASoC: wcd9xxx: Reset flyback current for TASHA_2_0
 .
   [ Govindaraj Rajagopal ]
   * msm: vidc: fix KCFI errors
   * msm: vidc: add additional check to avoid out of bound access
 .
   [ raghavendra ambadas ]
   * fbdev: msm: check the length of the external input buffer properly
 .
   [ VijayaKumar T M ]
   * msm: camera: jpegdma: Added missing lock for dqbuf and streamon
 .
   [ Deepak Kumar Singh ]
   * soc: qcom: Remove smp2p test support
   * soc: qcom: qmi_encdec: Restrict string length in decode
   * soc: qcom: smem: validate fields of shared structures
 .
   [ Aditya Bavanari ]
   * asoc: Ratelimit error logs to avoid excessive logging
 .
   [ Chunyan Zhang ]
   * ARM: 8731/1: Fix csum_partial_copy_from_user() stack mismatch
 .
   [ Nirmal Abraham ]
   * msm: mdss: Ignore overflow errors in dma_tpg_tx path
 .
   [ Anirudh Ghayal ]
   * ARM: dts: msm: Add custom ACC for APC on 8909w
 .
   [ Surendar Karka ]
   * ASoC: wsa881x: change WSA temparature log level to pr_debug
   * ASoC: wcd9335: update tasha register for 12.288Mhz clk
 .
   [ Puneet Yatnal ]
   * drivers: iio: imu: Fix NULL pointer dereference in bmi160 driver
   * drivers: iio: imu: Add mutex lock to ensure proper iio buffer access
 .
   [ Narender Ankam ]
   * msm: mdss: hdmi: handle HDMI audio notifications gracefully
 .
   [ Xiaoyu Ye ]
   * dsp: codecs: fix range check for audio buffer copying
 .
   [ Sahitya Tummala ]
   * ubi: Fix wrongly integrated changes from lsk-v3.18-16.11-android
 .
   [ Sanjay Singh ]
   * msm: vidc: Initialize DCVS load properly
 .
   [ Neeraj Soni ]
   * msm: ice: check for crypto engine availability
 .
   [ Kavya Nunna ]
   * ARM: dts: msm: Remove voltage-soc-timeout-ms for 8909
 .
   [ Animesh Kishore ]
   * msm: mdss: Signal pending release fences on blank
   * mdss: mdp3: Tag fence name with seqno
   * mdss: mdp3: Optimize power save in lp mode
 .
   [ Jordan Crouse ]
   * checkpatch: Treat duplicate signatures as a different error class
 .
   [ yangbiao Ma ]
   * ARM: dts: msm: fix HS UART node overwrite issue
 .
   [ Jhansi Konathala ]
   * SoC: msm: Add global mutex lock to fix the panic issue
   * SoC: msm: Add support to enable TX dtmf mute detection
 .
   [ Sriharsha Allenki ]
   * usb: phy: qusb: Do not turn off clocks if PMI has vote on it
 .
   [ Veerabhadrarao Badiganti ]
   * mmc: host: cmdq: Check if tag info extraced from CQTERRI is valid
   * ARM: dts: msm: enable SDR104 workaround for MDM9x55
 .
   [ Gustavo Solaira ]
   * usb: gadget: f_ipc: Prevent the unregister call from getting stuck
 .
   [ Pradeep P V K ]
   * mtd: msm_qpic_nand: An incorrect page memset during ECC errors
 .
   [ Manu Gautam ]
   * USB: dwc3: Handle host resume after failed remote wakeup-up
   * USB: dwc3: Check for U0 before detecting missed bus-wakeup
 .
   [ Aditya Mathur ]
   * ARM: dts: mdm: Enable rndis usb function for mdm9650
   * usb: gadget: u_ether: Fix skb free warning
   * usb: gadget: ffs: remove debug prints
   * defconfig: mdm: Enable USB IPC driver
   * ARM: dts: mdm: Enable IPC router usb function for mdm9650
 .
   [ John Stultz ]
   * sched: Add Kconfig option DEFAULT_USE_ENERGY_AWARE to set ENERGY_AWARE feature flag
   * timekeeping: Cap adjustments so they don't exceed the maxadj value
 .
   [ Siva Kumar Akkireddi ]
   * msm: mhi_dev: Move PCIE-EP and MHI drivers to subsys_init
 .
   [ Josh Kirsch ]
   * ASoC: msm: qdsp6v2: PCM input buffer delay
 .
   [ Dhanalakshmi Siddani ]
   * ARM: dts: msm: TDM mic enable on apq8009 IOT reference hardware
 .
   [ Swetha Chikkaboraiah ]
   * ARM: dts: msm: update dload type imem offset for MSM8917/37/53/96
 .
   [ E V Ravi ]
   * msm: ais: Fix arbitrary kernel write
 .
   [ Prakash Gupta ]
   * ion: msm_ion: fix incorrect ion_buffer member assignment
 .
   [ Theodore Ts'o ]
   * ext4: only look at the bg_flags field if it is valid
   * ext4: fix check to prevent initializing reserved inodes
 .
   [ Sebastian Andrzej Siewior ]
   * Revert "usb: cdc-wdm: Fix a sleep-in-atomic-context bug in service_outstanding_interrupt()"
 .
   [ Oliver Neukum ]
   * USB: usbdevfs: sanitize flags more
 .
   [ Alan Stern ]
   * USB: fix error handling in usb_driver_claim_interface()
 .
   [ Tony Lindgren ]
   * wlcore: Add missing PM call for wlcore_cmd_wait_for_event_or_timeout()
 .
   [ Amine Najahi ]
   * msm: mdss: sanitize debugfs inputs when reading mdp memory
 .
   [ Dhoat Harpal ]
   * soc: qcom: glink: Modify ipc logging for error case
 .
   [ Jia-Ju Bai ]
   * usb: cdc-wdm: Fix a sleep-in-atomic-context bug in service_outstanding_interrupt()
 .
   [ Dan Carpenter ]
   * f2fs: Fix uninitialized return in f2fs_ioc_shutdown()
   * uio: potential double frees if __uio_register_device() fails
 .
   [ Johan Hedberg ]
   * Bluetooth: h5: Fix missing dependency on BT_HCIUART_SERDEV
 .
   [ Alistair Strachan ]
   * Revert "kernel: kcov: include missing header for ‘struct task_struct’"
 .
   [ Bala Kishore Pati ]
   * ASoC: msm: qdsp6v2: set PRI_TDM_RX1 port id to EC ref port
 .
   [ Jianyu Zhan ]
   * futex: Replace barrier() in unqueue_me() with READ_ONCE()
 .
   [ Li Jinyue ]
   * BACKPORT: futex: Prevent overflow by strengthen input validation
 .
   [ Thomas Garnier ]
   * BACKPORT: x86/syscalls: Check address limit on user-mode return
   * BACKPORT: arm64/syscalls: Check address limit on user-mode return
   * UPSTREAM: syscalls: Use CHECK_DATA_CORRUPTION for addr_limit_user_check
   * BACKPORT: arm/syscalls: Optimize address limit check
 .
   [ Kees Cook ]
   * lib: move strtobool() to kstrtobool()
   * lib: add "on"/"off" support to kstrtobool
   * arm64: kernel: Fix incorrect brk randomization
   * UPSTREAM: rculist: Consolidate DEBUG_LIST for list_add_rcu()
   * BACKPORT: lkdtm: Add tests for struct list corruption
   * BACKPORT: lkdtm: add bad USER_DS test
 .
   [ Chao Yu ]
   * f2fs: fix error path of fill_super
   * f2fs: fix to do sanity check with reserved blkaddr of inline inode
   * f2fs: try grabbing node page lock aggressively in sync scenario
   * f2fs: fix to skip GC if type in SSA and SIT is inconsistent
   * f2fs: kill EXT_TREE_VEC_SIZE
   * f2fs: restrict setting up inode.i_advise
   * f2fs: let checkpoint flush dnode page of regular
   * f2fs: fix to active page in lru list for read path
   * f2fs: fix to clear PG_checked flag in set_page_dirty()
   * f2fs: avoid race between zero_range and background GC
 .
   [ Gustavo A. R. Silva ]
   * f2fs: use true and false for boolean values
 .
   [ Jaegeuk Kim ]
   * f2fs: flush journal nat entries for nat_bits during unmount
   * f2fs: allow wrong configured dio to buffered write
   * f2fs: avoid f2fs_bug_on() in cp_error case
 .
   [ Hyunchul Lee ]
   * f2fs: avoid duplicated permission check for "trusted." xattrs
 .
   [ Yunlong Song ]
   * f2fs: do not set free of current section
 .
   [ Gao Xiang ]
   * f2fs: avoid the global name 'fault_name'
 .
   [ Yunlei He ]
   * f2fs: fix a hungtask problem caused by congestion_wait
 .
   [ Tanya Dixit ]
   * rtac: Add mutex lock to ensure proper fops access
 .
   [ Woody Lin ]
   * cpufreq_stats: Reset cpufreq_task_stats right after dup_task_struct
   * pinctrl/qcom: pinctrl-msm.c: Bypass GPIO pins owned by TZ
 .
   [ Srinivas Ramana ]
   * pinctrl: qcom: Add irq_enable callback for msm gpio
 .
   [ Wen Yi ]
   * drivers/pinctrl: skip non-reable gpio pins
 .
   [ flar2 ]
   * Disable verify
   * ASoC: wcd9335: Sound control
   * ASoC: wcd9335: Sound control: allow further reduction of digital gain
   * ASoC: wcd9335: add analog headphone gain
   * ASoC: wcd9335: command line option to enable compander
   * sound_control: fix merge error
   * ARM: dts: msm8996pro: overclock to 2.4Ghz
   * msm8996: Overclocking with cmdline option
   * msm8996pro: overclocking with cmdline option
   * ARM: dts: msm8996pro: overclock to 2.4Ghz
   * msm8996: Overclocking with cmdline option
   * msm8996pro: overclocking with cmdline option
   * msm_performance: don't limit min and max cpu freq
 .
   [ Sultanxda ]
   * msm: mdss: Restrict display commit thread to power cluster
   * soc: qcom: glink: Fix memory leak in driver probe
   * msm: mdss: Don't cache the address of a stack variable in timings init
   * msm: camera: isp: Fix memory leaks in vfe probe
   * cpufreq: stats: Fix memory leaks when updating stats table
   * msm: camera: sensor: Fix memory leaks when sensor probe fails
   * net: ipc_router: Fix memory leaks when releasing a remote port
   * msm: msm_bus: Don't enable QoS clocks when none are present
   * net: sch_generic: Remove unnecessary watchdog warning
   * usb: dwc3-msm: Don't issue power supply change for invalid charger
   * msm: vidc: Fix broken debugfs creation error checks and error paths
   * power: msm-core: Fix mutex not getting unlocked in error path
   * usb: dwc3: Don't kill USB when CONFIG_IPC_LOGGING is disabled
   * treewide: Fix incorrect debugfs init error checks
   * wakeup: Expose wakeup_sources via procfs when debugfs isn't present
   * msm: mdss: Don't constantly fire interrupts for DSI status check
   * usb: dwc3-msm: Remove indefinite wakeup
   * power: msm-core: Add missing NULL pointer check in msm_core_ioctl()
   * arm64: Don't force compilation of memlat devfreq governors
   * usb: dwc3-msm: Remove indefinite wakeup
   * msm: mdss: Don't constantly fire interrupts for DSI status check
 .
   [ Francisco Franco ]
   * zram: fix merge derp
   * power: wakeup: prevent IPA_WS wakelock from being acquired by default
   * drivers: wakeup: add entries to disable wakelocks
   * wl_blocker: add more wakelocks to the default block list
   * power: block two more wakelocks just in case
   * power: wakeup: prevent IPA_WS wakelock from being acquired by default
   * drivers: wakeup: add entries to disable wakelocks
   * wl_blocker: add more wakelocks to the default block list
   * power: block two more wakelocks just in case
   * drivers: mdss: queue input handler functions to a high prio wq
   * msm: kgsl: run kgsl-workqueue as a high prio wq
   * display: add a simple api to query the display state (on/off) at any point in time
   * drivers: mdss: queue input handler functions to a high prio wq
   * msm: kgsl: run kgsl-workqueue as a high prio wq
   * display: add a simple api to query the display state (on/off) at any point in time
   * usb: dwc3-msm: define CONFIG_MACH_MSM8996_15801
 .
   [ Alex Naidis ]
   * sound: msm: qdsp6v2: optimize for size
   * arm/arm64: crypto: boost performance
   * cheryl: cpu-boost: Rework scheduling setup
   * cpu-boost: Boost priority of notifier_block
   * qdsp6v2: extend compilation with Os
   * qseecom: micro optimization for module detection
   * mdss: Remove dedicated wq for early_wakeup_clk_work
   * workqueue: Implement delayed_work_busy()
   * mm: compaction: Add automatic compaction mechanism
   * mm: compaction: Fix bad logging
   * qseecom: micro optimization for module detection
   * mdss: Remove dedicated wq for early_wakeup_clk_work
   * workqueue: Implement delayed_work_busy()
   * mm: compaction: Add automatic compaction mechanism
   * mm: compaction: Fix bad logging
   * msm-core: Fix error handling of sensor data retrieval
 .
   [ Darshan Kumsi Srinivasa ]
   * msm: vidc: Handle perf mode configuration
   * ARM: dts: msm: Define power configuration for msm8996 and msm8998
   * msm: vidc: Handle perf mode configuration
   * ARM: dts: msm: Define power configuration for msm8996 and msm8998
 .
   [ Ícaro Hoff ]
   * dts: msm8996pro: adjust msm-thermal frequency mitigation plan
   * dts: msm8996pro: adjust msm-thermal frequency mitigation plan
 .
   [ Peter Zijlstra (Intel) ]
   * perf: Avoid horrible stack usage
   * BACKPORT: sched/idle: Move quiet_vmstate() into the NOHZ code
   * BACKPORT: sched/idle: Move quiet_vmstate() into the NOHZ code
 .
   [ Shaohua Li ]
   * block: immediately dispatch big size request
   * block: immediately dispatch big size request
 .
   [ Shreyansh Lodha ]
   *  smp2p_sleepstate : run sleepstate_pm at notifier on highest prio
   *  smp2p_sleepstate : run sleepstate_pm at notifier on highest prio
 .
   [ Tim Murray ]
   * cpuidle: don't disable cpuidle when entering suspend
   * ion: adjust system heap pool orders
   * firmware_class: make firmware caching configurable
   * firmware_class: make firmware caching configurable
   * net: wireless: bcmdhd_4359: Fix CONFIG_HZ dependency in wifi driver
   * net: wireless: bcmdhd_4359: Fix CONFIG_HZ dependency in wifi driver
   * mm: skip swap readahead when process is exiting
   * mm: skip swap readahead when process is exiting
 .
   [ Martin Liu ]
   * msm: kgsl: move kgsl_3d_init to async
   * msm: kgsl: move kgsl_3d_init to async
 .
   [ Bruno Martins ]
   * power: qpnp-fg: Use default DELTA_SOC without rounding the value
   * power: qpnp-fg: Use default DELTA_SOC without rounding the value
 .
   [ Johannes Weiner ]
   * proc: meminfo: estimate available memory more conservatively
   * proc: meminfo: estimate available memory more conservatively
 .
   [ Nathan Zimmer ]
   * mm/mempolicy.c: convert the shared_policy lock to a rwlock
   * mm/mempolicy.c: convert the shared_policy lock to a rwlock
 .
   [ John Dias ]
   * sched: avoid scheduling RT threads on cores currently handling softirqs
   * sched: avoid migrating when softint on tgt cpu should be short
   * softirq, sched: reduce softirq conflicts with RT
   * rcu: boost: avoid preemption before calling complete()
   * sched: fix task-priority when using SCHED_RESET_ON_FORK
   * sched: fix task-priority when using SCHED_RESET_ON_FORK
 .
   [ Jiang Liu ]
   * BACKPORT: smp, ARM64: Kill SMP single function call interrupt
   * BACKPORT: smp, ARM64: Kill SMP single function call interrupt
 .
   [ Rafael J. Wysocki ]
   * BACKPORT: cpufreq: schedutil: Use policy-dependent transition delays
   * UPSTREAM: PM / sleep: Re-implement suspend-to-idle handling
   * PM / sleep: Make it possible to quiesce timers during suspend-to-idle
   * UPSTREAM: cpuidle: Clean up fallback handling in cpuidle_idle_call()
   * idle / sleep: Avoid excessive disabling and enabling interrupts
   * cpuidle / sleep: Do sanity checks in cpuidle_enter_freeze() too
   * cpuidle / sleep: Use broadcast timer for states that stop local timer
   * cpuidle: Do not use CPUIDLE_DRIVER_STATE_START in cpuidle.c
   * suspend-to-idle: Prevent RCU from complaining about tick_freeze()
   * cpuidle: Check the sign of index in cpuidle_reflect()
   * UPSTREAM: cpufreq: schedutil: Avoid using invalid next_freq
   * PCI / PM: Force devices to D0 in pci_pm_thaw_noirq()
   * PCI / PM: Force devices to D0 in pci_pm_thaw_noirq()
 .
   [ Jie Song ]
   * diag: Add timer to make sure wakelock no stuck
   * diag: Add timer to make sure wakelock no stuck
 .
   [ Alex Shi ]
   * cpu_pm/rt: replace rt rwlock with raw spinlock
   * cpu_pm/rt: replace rt rwlock with raw spinlock
 .
   [ Chen Yu ]
   * PCI/PM: Restore the status of PCI devices across hibernation
   * PCI/PM: Restore the status of PCI devices across hibernation
 .
   [ Yu Wang ]
   * cnss: notify wlan driver when failed to power up
   * cnss: merge cnss_wlan_status and cnss_driver_status
   * cnss: notify wlan driver when failed to power up
   * cnss: merge cnss_wlan_status and cnss_driver_status
 .
   [ danny aeng ]
   * defconfig: enable BLU_SCHEDUTIL
   * cpufreq: blu_schedutil: adjust code for 3.18.y
   * defconfig: use config_hz=300
   * arm: dts: msm8996pro: Fixup GPU 0mhz clock
   * defconfig: set vm readahead and swappiness
   * sched: introduce pwrutilx governor
   * defconfig: enable PWRUTILX
   * usb: dwc3-msm: Remove indefinite wakeup vol.2
   * defconfig: enable BLU_SCHEDUTIL
   * cpufreq: blu_schedutil: adjust code for 3.18.y
   * defconfig: use config_hz=300
   * arm: dts: msm8996pro: Fixup GPU 0mhz clock
   * defconfig: set vm readahead and swappiness
   * sched: introduce pwrutilx governor
   * defconfig: enable PWRUTILX
   * usb: dwc3-msm: Remove indefinite wakeup vol.2
 .
   [ mcdachpappe ]
   * mac80211: packet injection patch
   * mac80211: packet injection patch
 .
   [ googyanas ]
   * [PATCH] Add a hack to throttle orientation sensor input events
   * [PATCH] Add a hack to throttle orientation sensor input events
 .
   [ Pavankumar Kondeti ]
   * sched/fair: fix array out of bounds access in select_energy_cpu_idx()
   * sched/fair: fix incorrect CPU selection for non latency sensitive tasks
   * softirq: defer softirq processing to ksoftirqd if CPU is busy with RT
   * BACKPORT: cpuset: Restore tasks affinity while moving across cpusets
   * BACKPORT: cpuset: Restore tasks affinity while moving across cpusets
 .
   [ Sultan Alsawaf ]
   * cpufreq: Kill userspace CPU boosting entirely
   * kernel: Fix massive cpufreq stats memory leaks
   * ARM: dts: msm8996: Set GPU idle timeout to 64 ms
   * msm: kgsl: Wake GPU upon receiving an ioctl rather than upon touch input
   * msm: kgsl: Remove POPP
   * msm: clock-osm: Use CLKFLAG_NO_RATE_CACHE for pwrcl and perfcl clk
   * qcom-cpufreq: Use CLKFLAG_NO_RATE_CACHE
   * qcom-cpufreq: Limit the rate of CPU clock-rate changes
   * string: Use faster alternatives when constant arguments are used
   * msm: clock-osm: Use CLKFLAG_NO_RATE_CACHE for pwrcl and perfcl clk
   * qcom-cpufreq: Use CLKFLAG_NO_RATE_CACHE
   * qcom-cpufreq: Limit the rate of CPU clock-rate changes
   * string: Use faster alternatives when constant arguments are used
 .
   [ Paul E. McKenney ]
   * smpboot: Add common code for notification from dying CPU
   * cpu: Make CPU-offline idle-loop transition point more precise
   * BACKPORT: rcu: Move RCU_BOOST variable declarations, eliminating #ifdef
   * BACKPORT: rcu: Optionally run grace-period kthreads at real-time priority
   * rcu: Tighten up __call_rcu() rcu_head alignment check
   * rcu: Remove obsolete rcu_check_callbacks() header comment
   * rcu: Remove obsolete comment from __call_rcu()
   * torture: Trace long read-side delays
   * rcu: Don't disable CPU hotplug during OOM notifiers
   * rcu: Add long-term CPU kicking
   * rcu: Remove short-term CPU kicking
   * rcu: Tighten up __call_rcu() rcu_head alignment check
   * rcu: Remove obsolete rcu_check_callbacks() header comment
   * rcu: Remove obsolete comment from __call_rcu()
   * torture: Trace long read-side delays
   * rcu: Don't disable CPU hotplug during OOM notifiers
   * rcu: Add long-term CPU kicking
   * rcu: Remove short-term CPU kicking
 .
   [ Joel Fernandes (Google) ]
   * UPSTREAM: schedutil: Allow cpufreq requests to be made even when kthread kicked
   * rcu: Speed up calling of RCU tasks callbacks
   * rcu: Speed up calling of RCU tasks callbacks
   * rcu: Speed up calling of RCU tasks callbacks
   * rcu: Speed up calling of RCU tasks callbacks
 .
   [ Patrick Tjin ]
   * gadget/f_fs: reduce logspam on suspend/resume
   * defconfig: oce: add various HID drivers
   * gadget/f_fs: reduce logspam on suspend/resume
 .
   [ dianlujitao ]
   * ARM: dts: msm: Set default GPU freq to 133MHz on msm8996 and msm8996pro
   * ANDROID: dm: Always mount as linear target
   * msm: mdss: Silence invalid data for dither log spam
   * msm: mdss: Silence invalid data for dither log spam
 .
   [ danny ]
   * pinctrl: qcom: pinctrl-msm.c: Silence log spam
   * pinctrl: qcom: pinctrl-msm.c: Silence log spam
 .
   [ YaroST12 ]
   * drivers: gpu: adreno: compile only Adreno 5xx part
   * drivers: gpu: adreno: compile only Adreno 5xx part
 .
   [ Hareesh Gundu ]
   * arm64: dts: msm: Disable GPU wake up on touch event
   * arm64: dts: msm: Disable GPU wake up on touch event
 .
   [ celtare21 ]
   * drivers: video: mdss: Fix direct references to HZ
   * drivers: video: mdss: Fix direct references to HZ
 .
   [ Humberto Borba ]
   * drivers: i2c: Fix direct references to HZ
   * drivers: hwmon: Fix direct references to HZ
   * drivers: platform: gsi: Fix direct references to HZ
   * drivers: i2c: Fix direct references to HZ
   * drivers: hwmon: Fix direct references to HZ
   * drivers: platform: gsi: Fix direct references to HZ
 .
   [ Dorimanx ]
   * patch-3.18.63
   * patch-3.18.63-64
   * patch-3.18.64-65
   * patch-3.18.65-66
   * patch-3.18.66-67
   * patch-3.18.67-68
   * patch-3.18.68-69
   * patch-3.18.69-70
   * patch-3.18.70-71
   * patch-3.18.71-72
   * patch-3.18.72-73
   * patch-3.18.73-74
   * patch-3.18.74-75
   * patch-3.18.75-76
   * patch-3.18.76-77
   * patch-3.18.77-78
   * patch-3.18.78-79
   * patch-3.18.79-80
   * patch-3.18.80-81
   * patch-3.18.81-82
   * patch-3.18.82-83
   * patch-3.18.83-84
   * patch-3.18.84-85
   * patch-3.18.85-86
   * patch-3.18.86-87
   * patch-3.18.87-88
   * patch-3.18.88-89
   * patch-3.18.89-90
   * patch-3.18.90-91
   * patch-3.18.91-92
   * patch-3.18.92-93
   * patch-3.18.93-94
   * patch-3.18.94-95
   * patch-3.18.95-96
   * patch-3.18.96-97
   * patch-3.18.97-98
   * patch-3.18.98-99
   * patch-3.18.99-100
   * patch-3.18.100-101
   * patch-3.18.101-102
   * patch-3.18.102-103
   * Convert few critical drivers to use msecs_to_jiffies insted of HZ
   * Convert few critical drivers to use msecs_to_jiffies insted of HZ
 .
   [ Harm Hanemaaijer ]
   * Optimize copy_page for modern ARM platforms
   * Optimize copy_page for modern ARM platforms
 .
   [ LuizPauloDamaceno ]
   * crypto: msm: Update clock for improved performance
   * codec tunnings
   * crypto: msm: Update clock for improved performance
   * codec tunnings
 .
   [ matthewdalex ]
   * workqueue: change permissions to allow root control of wq_power_efficient toggle
   * workqueue: change permissions to allow root control of wq_power_efficient toggle
 .
   [ myfluxi ]
   * PM: devfreq: Fix simple_ondemand crashing on startup
   * PM: devfreq: Always reflect a change of polling interval
   * PM: devfreq: Always reflect a change of polling interval
   * PM: devfreq: Always reflect a change of polling interval
 .
   [ Yaroslav Furman ]
   * tcp_westwood: make 'rtt_min' and 'init_rtt' tunables and remove HZ dependency
   * tcp_westwood: tune up a bit
   * tcp_westwood: make 'rtt_min' and 'init_rtt' tunables and remove HZ dependency
   * tcp_westwood: tune up a bit
 .
   [ Harsh Shandilya ]
   * tcp_westwood : Tune-up
   * tcp_westwood : Tune-up
 .
   [ engstk ]
   * cpufreq: blu_schedutil: Introduce initial bringup
   * cpufreq: blu_schedutil: make iowait boost optional
   * cpufreq: blu_schedutil: Introduce initial bringup
   * cpufreq: blu_schedutil: make iowait boost optional
 .
   [ Tyler Nijmeh ]
   * HACK: fingerprint: fpc1020_OCN: use realtime mutex
   * HACK: fingerprint: fpc1020_OCN: use realtime mutex
   * msm: ipa: Do not acquire wakelocks
   * msm: ipa: Do not acquire wakelocks
 .
   [ engm.saad1990@gmail.com ]
   * block: add MAPLE I/O scheduler & Anxiety I/O scheduler
   *  oce: defconfig: add MAPLE I/O scheduler & Anxiety I/O scheduler
   * block: add MAPLE I/O scheduler & Anxiety I/O scheduler
   *  oce: defconfig: add MAPLE I/O scheduler & Anxiety I/O scheduler
 .
   [ Kelly Rossmoyer ]
   * fs: Improve eventpoll logging to stop indicting timerfd
   * fs: Improve eventpoll logging to stop indicting timerfd
 .
   [ Suren Baghdasaryan ]
   * staging: android: ashmem: Disallow ashmem memory from being remapped
   * staging: android: ashmem: Disallow ashmem memory from being remapped
 .
   [ Wenwen Wang ]
   * sound: fix a memory leak bug
   * sound: fix a memory leak bug
 .
   [ Joel Stein ]
   * oce: Enable quota support
   * oce: Enable quota support
 .
   [ TheStrix ]
   * defconfig: oce: Enable dm-verity configs
   * defconfig: oce: Enable dm-verity configs
   * defconfig: oce: Enable dm-verity configs
 .
   [ Zhu Jianmin ]
   * cfg80211: Fix use after free when process wdev events
   * cfg80211: Fix use after free when process wdev events
 .
   [ Wirusx64 ]
   * net: wireless: bcmdhd_4359: FIX kernel panic after plugin USB WiFi Adapter
   * net: wireless: bcmdhd_4359: FIX kernel panic after plugin USB WiFi Adapter
 .
   [ Insun Song ]
   * net: wireless: bcmdhd: fix integer overflow in wl_get_assoc_ies
   * net: wireless: bcmdhd: adding boundary check in wl_notify_rx_mgmt_frame
   * net: wireless: bcmdhd: adding boudary check in wl_escan_handler
   * net: wireless: bcmdhd: fix integer overflow in wl_get_assoc_ies
   * net: wireless: bcmdhd: adding boundary check in wl_notify_rx_mgmt_frame
   * net: wireless: bcmdhd: adding boudary check in wl_escan_handler
 .
   [ Julian Veit ]
   * net: wireless: bcmdhd: define CUSTOM_COUNTRY_CODE
   * net: wireless: bcmdhd: define CUSTOM_COUNTRY_CODE
 .
   [ Peng Xu ]
   * nl80211: Define policy for packet pattern attributes
   * nl80211: Define policy for packet pattern attributes
 .
   [ Dominik Brodowski ]
   * nl80211: take RCU read lock when calling ieee80211_bss_get_ie()
   * nl80211: take RCU read lock when calling ieee80211_bss_get_ie()
 .
   [ Johannes Berg ]
   * ipv4: add option to drop unicast encapsulated in L2 multicast
   * ipv6: add option to drop unicast encapsulated in L2 multicast
   * ipv4: add option to drop gratuitous ARP packets
   * ipv6: add option to drop unsolicited neighbor advertisements
   * ipv4: add option to drop unicast encapsulated in L2 multicast
   * ipv6: add option to drop unicast encapsulated in L2 multicast
   * ipv4: add option to drop gratuitous ARP packets
   * ipv6: add option to drop unsolicited neighbor advertisements
   * nl80211: don't expose wdev->ssid for most interfaces
   * nl80211: fix nl80211_send_iface() error paths
   * nl80211: don't expose wdev->ssid for most interfaces
   * nl80211: fix nl80211_send_iface() error paths
 .
   [ Ethan Chen ]
   * uapi: Define __BITS_PER_LONG based on compiler target
   * uapi: Export sockaddr_storage for userspace
   * uapi: Export sockaddr_storage for userspace
 .
   [ Arend van Spriel ]
   * BACKPORT: bcmdhd_4359: fix possible buffer overflow in wl_cfg80211_mgmt_tx()
   * BACKPORT: bcmdhd_4359: fix possible buffer overflow in wl_cfg80211_mgmt_tx()
 .
   [ Nathan Harold ]
   * defconfig: oce: Add VTI to Kernel Config
   * defconfig: oce: Add VTI to Kernel Config
 .
   [ Benedict Wong ]
   * defconfig: oce: Add AES-GCM support
   * defconfig: oce: Add AES-GCM support
 .
   [ Mark Salyzyn ]
   * FROMLIST: arm64: Avoid aligning normal memory pointers in __memcpy_{to,from}io
   * defconfig: oce: enable overlayfs
   * defconfig: oce: enable overlayfs
 .
   [ Chaitanya Pratapa ]
   * msm: ipa: fix to validate the ioctl WAN_IOC_SEND_LAN_CLIENT_MSG params
   * msm: ipa: fix to validate the ioctl WAN_IOC_SEND_LAN_CLIENT_MSG params
 .
   [ Amir Levy ]
   * msm: ipa: Move NAT invalid protocol define to uapi
   * msm: ipa: Move NAT invalid protocol define to uapi
 .
   [ Davide Garberi ]
   * dts: msm8996-ufs: Remove early system mount
 .
   [ Thierry Strudel ]
   * Revert "mm: swap: swap ratio support"
   * remove calls to trace_printk
   * remove calls to trace_printk
 .
   [ Park Ju Hyung ]
   * trace: add CONFIG_DISABLE_TRACE_PRINTK option
   * trace: add CONFIG_DISABLE_TRACE_PRINTK option
 .
   [ Ali B ]
   * scripts: wireguard: stick to June release
 .
   [ Malte Leip ]
   * usb: usbip: fix isoc packet num validation in get_pipe
   * usb: usbip: fix isoc packet num validation in get_pipe
 .
   [ tbalden ]
   * mdss mdp: kcal for HTC U Ultra (oce) patch
   * msm: mdss mdp: kcal: fixing up missing kfree for payloads
   * qpnp-smbcharge: 0.5A -> 0.9A max current fastcharge
   * fastcharge: fix ifdef part
   * fingerprint doubletap sleep driver
   * Fingerprint doubletap sleep: minor corrections
   * misc: fingerprint_filter: fingerpint doubletap sleep clean up
   * misc: fingerprint_filter: removing potential null reference
   * misc: fpf filter: add configuration fpf value 1 for generic home button working
   * misc: fpf_filter: fix issues of userspace
   * fingerprint: fpf filter: add sysfs to configure Doubltap wait
   * misc: fingerprint: fpf: adding lowest possible dt latency value
   * misc: fingerprint: fpf: fix filtering of events
 .
   [ Danny Baumann ]
   * rtc: qpnp: Adjust power-on alarm time.
 .
   [ Nathan Chan ]
   * arch/arm64/kernel/vdso/gen_vdso_offsets.sh: Fix permission for lineage compile
   * Fix compile without boeffla_wl_blocker
   * Fix compile without boeffla_wl_blocker
 .
   [ Jia Cheng She ]
   * Merge pull request #1 from natekc/lineage-16.0-compile-fix
 .
   [ matt_huang ]
   * pwm: qpnp: Fix qcom HW known issue
 .
   [ Christopher R. Palmer ]
   * sound: Fix the getting of the "AUX PCM SampleRate" control
   * sound: msm8996: Update the enum text for "AUX PCM SampleRate"
   * net: wireless: bcmdhd_4359: Remove always sending keepalive packets
   * bcmdhd_4359: Control pm2_sleep_ret on screen on/off
   * bcmdhd_4359: Control minimum power consumption on screen on/off
   * net: wireless: bcmdhd_4359: Disable HTC's traffic monitor
   * net: wireless: bcmdhd_4359: Reduce wakelock from 500ms to 50ms
   * net: wireless: bcmdhd_4359: Remove always sending keepalive packets
   * bcmdhd_4359: Control pm2_sleep_ret on screen on/off
   * bcmdhd_4359: Control minimum power consumption on screen on/off
   * net: wireless: bcmdhd_4359: Disable HTC's traffic monitor
   * net: wireless: bcmdhd_4359: Reduce wakelock from 500ms to 50ms
 .
   [ Captain Throwback ]
   * Enable F2FS support
   * oce: update exfat-nofuse source from @dorimanx
   * pme: Allow touch in recovery mode
   * oce: Allow touch in recovery mode
   * pme: Allow touch in recovery mode
   * oce: Allow touch in recovery mode
 .
   [ andip71 ]
   * boeffla_wl_blocker: add generic wakelock blocker driver v1.0.0
   * boeffla_wl_blocker: update to wakelock blocker driver v1.0.1
   * boeffla_wl_blocker: update to wakelock blocker driver v1.1.0
   * boeffla_wl_blocker: add generic wakelock blocker driver v1.0.0
   * boeffla_wl_blocker: update to wakelock blocker driver v1.0.1
   * boeffla_wl_blocker: update to wakelock blocker driver v1.1.0
 .
   [ Todd Kjos ]
   * EAS: cpufreq: interactive: return ENODEV on write to use_migration_notif
   * sched/fair: add tunable to set initial task load
   * sched/fair: optimize idle cpu selection for boosted tasks
   * sched: EAS: Avoid causing spikes to max-freq unnecessarily
   * FIXUP: sched/fair: Fix hang during suspend in sched_group_energy
   * FIXUP: sched: Fix double-release of spinlock in move_queued_task
   * sched: use util instead of capacity to select busy cpu
   * Revert "ANDROID: sched/rt: schedtune: Add boost retention to RT"
   * ARM: dts: msm: Import msm8996 energy model
   * FROMLIST: binder: fix proc->files use-after-free
   * UPSTREAM: binder: fix race that allows malicious free of live buffer
   * FROMGIT: binder: create node flag to request sender's security context
   * Revert "FROMLIST: binder: fix proc->files use-after-free"
   * UPSTREAM: binder: fix proc->files use-after-free
 .
   [ Dikshita Agarwal ]
   * msm: vidc: ensure codec count is in supported session range
 .
   [ Meera Gande ]
   * msm: camera: isp: Fix invalid type conversion
 .
   [ Florian Westphal ]
   * netfilter: x_tables: kill check_entry helper
 .
   [ Adrian Salido ]
   * msm: mdss: save state of vsync handler
 .
   [ Vijayanand Jitta ]
   * iommu: dma-mapping-fast: Add a check for count in fast_smmu_alloc
   * iommu: iommu-debug: don't pass null character to copy_to_user
 .
   [ Daniel Micay ]
   * add toggle for disabling newly added USB devices
 .
   [ Mohammed Javid ]
   * msm: ipa3: Add support to take data of tput threshold BW from dtsi
   * msm: ipa: prevent string buffer overflows
   * msm:ipa: Fix to slab out of bounds access
   * msm: ipa: Fix pointer checked for NULL may be used
   * msm: ipa: support aggregated ipa stats query
   * msm: ipa: Fix array out of bound and use after NULL check
   * msm: ipa3: Fix to set QMB on USB ep
   * msm: ipa3: Remove ep_delay on disconnect sequence
   * msm: ipa: Cache CNE event
   * msm: ipa: Fix use after free issue
   * msm: ipa: Change error value for set quota
   * msm: ipa: Code change missed out
   * msm:ipa: Fix to IPA static analysis constant null deferenced
   * msm: ipa: Return error -ENODEV for set data quota failure
   * msm: ipa: Fix to unsigned integer underflow
   * msm:ipa: Return mux id only for valid interface
   * msm: ipa: dynamic memory leak fix
   * msm: ipa: Fix to add string NULL terminator
   * msm: ipa: Fix to handle NULL pointer dereference
   * msm: ipa: rmnet: Update wan IOCTL function in SSR scenario
   * msm: ipa: Set ep delay on USB_PROD ep
   * msm: ipa: Set ep delay on rmnet/mbim tether pipe
   * msm: ipa: Fix to use after free issue
   * msm: ipa: Fix variables used uninitialized
   * msm: ipa: rmnet: Make code changes with respect to CR#2046006
   * arm: msm: ipa: Add support to get MHI config dynamically
   * msm: ipa: using debug logging instead of error logging
   * msm: ipa: fix to not allow NAT DMA command without device initialization
   * msm: ipa: Fix to slab out of bounds issue
   * msm: ipa: gsi: mhi: Couple of code changes
   * msm: ipa: Fix race condition head_desc_list variable access
   * msm: ipa2: Added retry logic if memory allocate fails
   * msm: ipa: Error prints are misleading fix it
   * msm: ipa: Setting appropriate config on MHI ep
   * msm: ipa: Add WLAN FW SSR event
   * msm: ipa: Validate routing rule id
   * msm:ipa: Prevent NAT table deletion only if public ip is not assigned
   * msm: ipa3: Add mutex to prevent race condition
   * msm: ipa: Release wlan cons resource
   * msm: ipa: Protect ipa default routing table
   * msm:ipa:Prevent rt rule deletion if rt rule id is invalid
   * msm: ipa3: Fix to validate the user inputs
 .
   [ Adek Maulana ]
   * zswap: remove double definition of zswap_zpool_ops
 .
   [ Sergey Senozhatsky ]
   * zsmalloc: drop unused variable `nr_to_migrate'
   * zsmalloc: always keep per-class stats
   * zsmalloc: introduce zs_can_compact() function
   * zsmalloc: cosmetic compaction code adjustments
   * zram: cosmetic ZRAM_ATTR_RO code formatting tweak
   * zram: use idr instead of `zram_devices' array
   * zram: reorganize code layout
   * zram: remove max_num_devices limitation
   * zram: report every added and removed device
   * zram: trivial: correct flag operations comment
   * zram: return zram device_id from zram_add()
   * zram: close race by open overriding
   * zram: add dynamic device add/remove functionality
   * zram: cosmetic zram_bvec_write() cleanup
   * zram: cut trailing newline in algorithm name
   * zram: check comp algorithm availability earlier
   * zram: fix pool name truncation
   * zsmalloc/zram: introduce zs_pool_stats api
   * zsmalloc: account the number of compacted pages
   * zsmalloc: use shrinker to trigger auto-compaction
   * zsmalloc: partial page ordering within a fullness_list
   * zsmalloc: do not take class lock in zs_shrinker_count()
   * zsmalloc: remove null check from destroy_handle_cache()
   * zram: unify error reporting
 .
   [ Krzysztof Kozlowski ]
   * mm: zpool: constify the zpool_ops
 .
   [ Minchan Kim ]
   * zsmalloc: consider ZS_ALMOST_FULL as migrate source
   * zsmalloc: use class->pages_per_zspage
 .
   [ Marcin Jabrzyk ]
   * zsmalloc: remove obsolete ZSMALLOC_DEBUG
   * zram: remove obsolete ZRAM_DEBUG option
 .
   [ Dan Streetman ]
   * zpool: remove zpool_evict()
 .
   [ Joonsoo Kim ]
   * mm/writeback: correct dirty page calculation for highmem
 .
   [ Wilco Dijkstra ]
   * arm64: Use optimized memcmp
 .
   [ Laster K ]
   * Kconfig: msm: remove deprecated dts eagle driver
   * qdsp6v2: dts_eagle: use newer drivers
 .
   [ joshuous ]
   * Revert "sched: qhmp: consider only the active CPUs in select_best_cpu()"
   * Revert "sched: Fix deadlock between cpu hotplug and upmigrate change"
   * Revert "sched: drop related_thread_group_lock before calling call_rcu()"
   * Revert "sched/fair: Fix compilation when CFS_BANDWIDTH && !SCHED_HMP"
   * Revert "sched: Fix integer overflow in sched_update_nr_prod()"
   * Revert "sched: qhmp_core: Fix possible hotplug race in set_cpus_allowed_ptr"
   * Revert "sched: Add a knob to disable the core_ctl"
   * Revert "trace: Move core control trace events to scheduler"
   * Revert "core_ctrl: Move core control into kernel"
   * Revert "sched: Introduce sched_freq_aggregate_threshold tunable"
   * Revert "sched: kill unnecessary divisions on fast path"
   * Revert "sched: prevent race where update CPU cycles"
   * Revert "sched: fix overflow in scaled execution time calculation"
   * Revert "sched: remove unused parameter cpu from cpu_cycles_to_freq()"
   * Revert "sched: core: Fix possible hotplug race in set_cpus_allowed_ptr"
   * Revert "sched: fix compilation errors with !SCHED_FREQ_INPUT"
   * Revert "sched: fix compilation errors with !SCHED_HMP"
   * Revert "sched: qhmp: optimize power_delta_exceeded() for !sched_enable_power_aware"
   * Revert "sched: fix potential deflated frequency estimation during IRQ handling"
   * Revert "sched: fix CPU frequency estimation while idle"
   * Revert "sched: preserve CPU cycle counter in rq"
   * Revert "Revert "sched: warn/panic upon excessive scheduling latency""
   * Revert "Revert "sched: add scheduling latency tracking procfs node""
   * Revert "sched: eliminate sched_early_detection_duration knob"
   * Revert "sched: Remove the sched heavy task frequency guidance feature"
   * Revert "sched: eliminate sched_migration_fixup knob"
   * Revert "sched: eliminate sched_enable_power_aware knob and parameter"
   * Revert "sched: eliminate sched_freq_account_wait_time knob"
   * Revert "sched: eliminate sched_account_wait_time knob"
   * Revert "sched: don't assume higher capacity means higher power in lb"
   * Revert "sched: fix incorrect type casting in trace events"
   * Revert "sched: Aggregate for frequency"
   * Revert "sched: simplify CPU frequency estimation and cycle counter API"
   * Revert "time: sched_clock: record cycle count in suspend and resume"
   * Revert "arm64: topology: Allow specifying the CPU efficiency from device tree"
   * Revert "arm64: topology: Define arch_get_cpu_efficiency() API for scheduler"
   * Revert "arm64: topology: Provide relative power numbers for cores"
   * Revert "arm64: topology: Tell the scheduler about the relative power of cores"
   * Revert "arm: topology: Allow specifying the CPU efficiency from device tree"
   * Revert "arm: topology: Define arch_get_cpu_efficiency() API for scheduler"
   * Revert "cpufreq: cpu-boost: Force most/all tasks to big cluster on input event"
   * cpufreq: Fix incorrect Kconfig selection of Interactive
   * sched: Remove cpufreq_sched.c for bringup from scratch
   * sched: Remove SchedTune source files for bringup from scratch
   * sched: Remove WALT source files for bringup from scratch
   * lpm-levels: Remove sched_set_cpu_cstate()
   * Revert "sched: Make the scheduler aware of C-state for cpus"
   * schedutil: Don't assume we are likely using PELT
   * msm_performance: Disable a HMP-specific function
   * msm_performance: Optionally restrict capabilities to cpufreq limits voting
   * sched/tune: Add initial support for Dynamic SchedTune Boost
   * cpu-boost: Implement Dynamic SchedTune Boost v3
   * sched: Disable FBT_STRICT_ORDER
   * Revert "sched: Kill task_preempt_count()"
   * Revert "ANDROID: sched/rt: schedtune: Add boost retention to RT"
   * Revert "ANDROID: sched/rt: add schedtune accounting"
   * Revert "drivers: sensors: Add sysfs property to read QDSP timer"
   * cpu-boost: Reset Dynamic SchedTune Boost only if it is currently active
   * cpu-boost: Update functions for newer Dynamic Schedtune Boost changes
   * drivers: Initial import of DTS-Eagle driver
   * sound: DTS-Eagle integration
   * Initial AudioWizard bringup
   * sound: wcd9335: Disable g_DebugMode
 .
   [ Daniel Rosenberg ]
   * ANDROID: sdcardfs: Don't use OVERRIDE_CRED macro
   * ANDROID: sdcardfs: Change current->fs under lock
   * ANDROID: sdcardfs: Add option to drop unused dentries
   * ANDROID: sdcardfs: Add sandbox
   * ANDROID: sdcardfs: Add option to not link obb
 .
   [ ninez ]
   * Backport RCU from linux-4.4 [Local commit due to patching via git being a pain. lol]
 .
   [ Tahsin Erdogan ]
   * block: Make CFQ default to IOPS mode on SSDs
   * Revert "arm64: errata: Calling enable functions for CPU errata too"
 .
   [ Christoph Lameter ]
   * vmstat: Reduce time interval to stat update on idle cpu
 .
   [ Hugh Dickins ]
   * mm: migrate dirty page without clear_page_dirty_for_io etc
 .
   [ Mark Rutland ]
   * BACKPORT: arm64: split thread_info from task stack
   * UPSTREAM: arm64: vdso: fix clock_getres for 4GiB-aligned res
 .
   [ Nathan Lynch ]
   * UPSTREAM: arm64: vdso: minor ABI fix for clock_getres
 .
   [ Andre Przywara ]
   * arm64: errata: Calling enable functions for CPU errata too
 .
   [ Will Deacon ]
   * arm64: lib: improve copy_page to deal with 128 bytes at a time
   * FROMLIST: arm64: mm: Map entry trampoline into trampoline and kernel page tables
 .
   [ Wei Wang ]
   * arm: dts: remove unused kernel_cmd for EAS
   * msm-thermal: add option to disable core_control and disable it in 8996
   * arm: dts: remove core control disable in 8996
   * msm-thermal: add option to disable core_control and disable it in 8996
   * msm-thermal: create core_control sysfs node only when necessary
   * msm-thermal: fix offlined core counting
   * ANDROID: ARM64: smp: disable preempt in backtracing across all cores
   * kernel: initialize and free cpufreq stats properly
   * ANDROID: mm: add config for default readahead size
 .
   [ Connor O'Brien ]
   * sched/tune: allow negative cpu boosts
   * ANDROID: proc: Add /proc/uid directory
   * ANDROID: cpufreq: Add time_in_state to /proc/uid directories
   * cpufreq: stats: update uid data in acct_update_power
   * cpufreq: stats: use seq iterator for large uid-related files
   * proc: add null check in proc_uid_init
 .
   [ Daniel Colascione ]
   * Add /proc/pid/smaps_rollup
 .
   [ Marissa Wall ]
   * ANDROID: cpufreq: concurrent_active_time by pid
   * ANDROID: cpufreq: concurrent_policy_time by pid
   * ANDROID: cpufreq: uid_concurrent_active_time
   * ANDROID: cpufreq: uid_concurrent_policy_time
   * ANDROID: cpufreq: Remove seq_printf from critical path
   * STOPSHIP: ANDROID: cpufreq: concurrent_*_time P/H experiment
   * ANDROID: cpufreq: change uid_cpupower to use u32
 .
   [ Andres Oportus ]
   * sched/core: Fix PELT jump to max OPP upon util increase
   * sched: tune: Unconditionally allow attach
   * ANDROID: cpufreq_stat: add per task/uid/freq stats
   * ANDROID: cpufreq: stats: add uid removal for uid_time_in_state
   * ANDROID: cpufreq_stats: Fix task time in state locking
   * ANDROID: cpufreq: stats: Fix dead stats clearing timing
 .
   [ Yabin Cui ]
   * perf: disable cross_hotplug for l2 cache pmu.
   * perf:arm64: fix pmu percpu irq handling at hotplug.
   * perf:arm64: fix lockdep warning when handling CPU_STARTING.
 .
   [ Veena Sambasivan ]
   * Revert "Perf: arm64: stop counters when going into hotplug"
   * Revert "Perf: arm64: restore registers after reset"
   * Revert "Perf: arm64: fix disable of pmu irq during hotplug"
   * Revert "Perf: arm64: support hotplug and power collapse"
   * perf: arm64: implement CPU_PM notifier
   * perf: arm64: fix RCU usage on pmu resume from low-power
 .
   [ Skylar Chang ]
   * msm: ipa3: fix holb sequence for SSR
   * msm: ipa: support ipacm cleanup
   * msm: ipa: disable prefetch for MHI
   * msm: ipa: support ipacm cleanup
   * msm: ipa3: fix hdr offset issue
   * msm: ipa: ipa_usb: remove SUSPEND_IN_PROGRESS state
   * msm: ipa: fix the ipa-hw rules not clean
   * msm:ipa3: fix the header table gap issue
 .
   [ Tobias Tefke ]
   * oce: update wifi configuration
 .
   [ Laura Abbott ]
   * BACKPORT: staging: android: ion: Pull out ion ioctls to a separate file
 .
   [ Srinu Gorle ]
   * msm: vidc: fix clock voting for back to back video encoding
 .
   [ Paras Nagda ]
   * msm: vidc: Addition of enums for HLG and HDR10
 .
   [ savoca ]
   * staging: Add frandom RNG driver
   * staging: frandom: Dynamically allocate the char device numbers
   * staging: frandom: Clear up checkpatch conflicts
   * drivers: Upgrade frandom from staging
 .
   [ Rashi Bindra ]
   * msm: mdss: Fix for wrong length in copy_to_user
 .
   [ Harsh Sahu ]
   * msm: mdss: check buffer size before writing to user buffer
 .
   [ Sreelakshmi Gownipalli ]
   * diag: Protect the decrement of number of diag clients
 .
   [ Mahesh Sivasubramanian ]
   * drivers: qcom: lpm-stats: Fix undefined access error
 .
   [ TeYuan Wang ]
   * arm64/configs: Remove LIMITS_LITE_HW config
 .
   [ Andrea Arcangeli ]
   * fs/exec: fix use after free in execve
 .
   [ Tom Marshall ]
   * kernel: Only expose su when daemon is running
   * kernel: Fix potential refcount leak in su check
 .
   [ RenderBroken ]
   * SCHED: SCHEDUTIL: Fix tunables not sticking after core going offline
 .
   [ Joel Fernandes ]
   * UPSTREAM: cpufreq: schedutil: Make iowait boost more energy efficient
   * UPSTREAM: cpufreq: schedutil: Use unsigned int for iowait boost
   * sched/core: fix have_sched_energy_data build warning
   * Revert "sched/core: fix have_sched_energy_data build warning"
   * Revert "sched/core: Warn if ENERGY_AWARE is enabled but data is missing"
   * ANDROID: sched/rt: add schedtune accounting
   * ANDROID: sched/rt: schedtune: Add boost retention to RT
   * ANDROID: sched/rt: schedtune: Add boost retention to RT
   * FROMLIST: cpufreq: Make iowait boost a policy option
   * FROMLIST: sched: Make iowait_boost optional in schedutil
   * sched/fair: Skip frequency updates if CPU about to idle
   * sched/fair: Fix issue where frequency update not skipped
   * marlin: ANDROID: sched: rt: Avoid preempting CPUs if softirq explicity disable
   * marlin: sched: rt: Avoid CPUs running top apps if possible
   * [Partial cherrypick] cpufreq_sched: Fix race in governor exit path
 .
   [ Andrey Ryabinin ]
   * sched/fair: Fix multiplication overflow on 32-bit systems
   * mm/page-writeback: fix dirty_ratelimit calculation
 .
   [ Jin Qian ]
   * uid_sys_stats: fix overflow when io usage delta is negative
 .
   [ Deepak Kumar ]
   * msm: kgsl: Move global memory region to 0x100000000
   * msm: kgsl: Update global memory base to 0XFC000000 for 64bit kernel
 .
   [ Alexey Polyudov ]
   * gpio: Mask non-wakeup GPIO interrupts on suspend
 .
   [ Siqi Lin ]
   * Revert "cpuidle: Wakeup only cpus for which qos has changed."
   * ANDROID: cpufreq: stats: Fix sleeping while atomic in cpufreq_task_stats_init
 .
   [ Diogo Ferreira ]
   * qpnp-smbcharger: Publish charger voltage to the usb psy
 .
   [ Vikash Garodia ]
   * msm: vidc: Handle perf mode configuration
 .
   [ Hong-Mei Li ]
   * arm64: lib: memory utilities optimization
 .
   [ Namjae Jeon ]
   * writeback: fix writeback cache thrashing
 .
   [ gustavoss ]
   * Optimized Console FrameBuffer for upto 70% increase in Performance
 .
   [ franciscofranco ]
   * cpu-boost: Export input_boost_enable to userspace
   * arm64: atomic: add missing macros
   * kernel: cpu: use cpu_read_relaxed on cpu_down()
 .
   [ Sumit Singh ]
   * asm-generic: relaxed.h: defined relaxed.h
   * ARM64: defining macros to optimize power usage
   * asm-generic: atomic.h: relaxed atomic_read
   * arm64: asm: relaxed.h: defined relaxed.h
   * arm: atomic.h: defined relaxed atomic_read
   * arm64: atomic.h: defining relaxed atomic_read
   * arm: asm: relaxed.h: defined relaxed.h
   * asm-generic: processor.h: adding new header file
   * asm-generic: processor.h: remove redundant macros
   * thread_info: enhance power efficiency
   * hrtimer: enhance power efficiency
   * llist: defining relaxed version of llist_empty
 .
   [ Steve Kondik ]
   * arm64: Fix the ARM userspace build
   * arch: Unbreak mrproper/clean
   * msm: qdsp6v2: Allow 320K AAC encoding
 .
   [ fluxi ]
   * msm: Fix Kconfig warnings
 .
   [ Paul Walmsley ]
   * UPSTREAM: arm64: fix missing asm/pgtable-hwdef.h include in asm/processor.h
   * UPSTREAM: arm64: fix missing asm/io.h include in kernel/smp_spin_table.c
   * UPSTREAM: arm64: fix missing asm/alternative.h include in kernel/module.c
 .
   [ Richard Cochran ]
   * UPSTREAM: time: move the timecounter/cyclecounter code into its own file.
 .
   [ Michal Hocko ]
   * BACKPORT: partial: mm, oom_reaper: do not mmput synchronously from the oom reaper context
 .
   [ Joe Thornber ]
   * UPSTREAM: dm bufio: switch from a huge hash table to an rbtree
 .
   [ Pranav Vashi ]
   * ASoC: wcdxxxx: queue work on power efficient wq
 .
   [ Riley Andrews ]
   * sched: fair: Change the synchronous wakeup logic in hmp.
   * BACKPORT: cpuset: Add allow_attach hook for cpusets on android.
   * arm64: crypto: Change priority of arm64 aes cipher.
 .
   [ Yazen Ghannam ]
   * crypto: crc32 - Add ARM64 CRC32 hw accelerated module
 .
   [ Roopesh Rajashekharaiah Nataraja ]
   * serial: msm_serial_hs: optimize total tty port support
 .
   [ Philip Cuadra ]
   * tty: move tty_port workqueue to be a kthread
   * tty: add tty_port_set_policy function
   * Make msm_serial_hs RT to improve bluetooth performance
   * msm_serial_hs:  make the Bluetooth tty thread RT
 .
   [ Naseer Ahmed ]
   * mdss: rotator: Use FIFO kthread for rotator work
 .
   [ Glauber Costa ]
   * cfq: fix starvation of asynchronous writes
 .
   [ Tejun Heo ]
   * sched: Allow migrating kthreads into online but inactive CPUs
   * cfq-iosched: simplify control flow in cfq_get_queue()
   * cfq-iosched: fix async oom queue handling
   * cfq-iosched: fix oom cfq_queue ref leak in cfq_set_request()
   * cfq-iosched: minor cleanups
 .
   [ Jens Axboe ]
   * cfq-iosched: fix the setting of IOPS mode on SSDs
 .
   [ Greg Kroah-Hartman ]
   * Revert "FROMLIST: android: binder: Drop lru lock in isolate callback"
   * net: fec: fix build error in fec driver
   * Linux 3.18.104
 .
   [ Martijn Coenen ]
   * ANDROID: binder: Add tracing for binder priority inheritance.
   * ANDROID: binder: Add thread->process_todo flag.
   * ANDROID: binder: show high watermark of alloc->pages.
   * ANDROID: binder: clarify deferred thread work.
   * UPSTREAM: android: binder: fix type mismatch warning
   * ANDROID: binder: Remove obsolete proc waitqueue.
   * UPSTREAM: ANDROID: binder: remove waitqueue when thread exits.
   * UPSTREAM: ANDROID: binder: synchronize_rcu() when using POLLFREE.
   * UPSTREAM: ANDROID: binder: prevent transactions into own process.
 .
   [ Sherry Yang ]
   * FROMLIST: android: binder: Refactor prev and next buffer into a helper function
   * FROMLIST: android: binder: Add allocator selftest
   * FROMLIST: android: binder: Move buffer out of area shared with user space
   * FROMLIST: android: binder: Add global lru shrinker to binder
   * FROMLIST: android: binder: Add shrinker tracepoints
   * FROMLIST: android: binder: Add page usage in binder stats
   * FROMLIST: android: binder: Drop lru lock in isolate callback
   * FROMLIST: android: binder: Drop lru lock in isolate callback
   * FROMLIST: android: binder: Remove unused vma argument
   * FROMLIST: android: binder: Don't get mm from task
   * FROMLIST: android: binder: Change binder_shrinker to static
   * FROMLIST: android: binder: Fix null ptr dereference in debug msg
 .
   [ Ganesh Mahendran ]
   * ANDROID: binder: init desired_prio.sched_policy before use it
   * ANDROID: binder: fix node sched policy calculation
 .
   [ Clark Williams ]
   * BACKPORT: rcu: Unify boost and kthread priorities
 .
   [ Patrick Bellasi ]
   * sched/tune: add sysctl interface to define a boost value
   * sched/fair: add function to convert boost value into "margin"
   * sched/fair: add boosted CPU usage
   * sched/tune: add initial support for CGroups based boosting
   * sched/tune: compute and keep track of per CPU boost value
   * sched/{fair,tune}: track RUNNABLE tasks impact on per CPU boost value
   * sched/fair: add boosted task utilization
   * sched/fair: keep track of energy/capacity variations
   * sched/tune: add support to compute normalized energy
   * sched/fair: filter energy_diff() based on energy_payoff value
   * DEBUG: schedtune: add tracepoint for SchedTune configuration update
   * DEBUG: schedtune: add tracepoint for CPU boost signal
   * DEBUG: schedtune: add tracepoint for schedtune_tasks_update() values
   * DEBUG: sched/tune: add tracepoint for task boost signal
   * DEBUG: sched/tune: add tracepoint for energy_diff() values
   * DEBUG: sched/tune: add tracepoint on P-E space filtering
   * FIXUP: sched: fix build for non-SMP target
   * FIX: sched/tune: update usage of boosted task utilisation on CPU selection
   * FIX: sched/tune: move schedtune_nornalize_energy into fair.c
   * FIXUP: sched/tune: fix payoff calculation for boost region
   * sched/{fair,tune}: simplify fair.c code
   * sched/tune: use a single initialisation function
   * FIXUP: sched/tune: fix accounting for runnable tasks
   * sched/tune: fix PB and PC cuts indexes definition
   * FIXUP: sched: fix set_cfs_cpu_capacity when WALT is in use
   * FIXUP: sched: fix SchedFreq integration for both PELT and WALT
   * DEBUG: sched: add tracepoint for RD overutilized
   * FIXUP: sched/tune: do initialization as a postcore_initicall
   * FIXUP: sched/tune: add fixes missing from a previous patch
   * FIXUP: sched/tune: update accouting before CPU capacity
   * sched/tune: report when SchedTune has not been initialized
   * sched/{fair,tune}: use reciprocal_value to compute boost margin
   * sched/fair: use SCHED_CAPACITY_SCALE for energy normalization
   * sched/fair: streamline find_best_target heuristics
   * events: add tracepoint for find_best_target
   * sched/fair: trace energy_diff for non boosted tasks
   * sched/fair: ignore backup CPU when not valid
   * sched/fair: enforce EAS mode
   * sched/fair: consider task utilization in group_max_util()
   * sched/tune: fix tracepoint location
   * sched/fair: remove energy_diff tracepoint in preparation to re-factoring
   * sched/fair: remove capacity tracking from energy_diff
   * sched/fair: cleanup select_energy_cpu_brute to be more consistent
   * sched/fair: re-factor energy_diff to use a single (extensible) energy_env
   * sched/fair: reduce rounding errors in energy computations
   * ANDROID: sched/fair: cosmetics
   * ANDROID: sched/tune: remove unused variable
   * ANDROID: sched/tune: cleanup schedtune_boostgroup_{init,release}
   * ANDROID: sched/tune: fix boost_group spin_lock re-initialization
   * UPSTREAM: cpufreq: schedutil: Fix iowait boost reset
 .
   [ Viresh Kumar ]
   * cpufreq: sched: Fix kernel crash on accessing sysfs file
   * cpufreq: schedutil: move slow path from workqueue to SCHED_FIFO task
   * FROM-LIST: cpufreq: schedutil: Redefine the rate_limit_us tunable
   * UPSTREAM: cpufreq: schedutil: Rectify comment in sugov_irq_work() function
   * UPSTREAM: cpufreq: schedutil: Pass sg_policy to get_next_freq()
   * cpufreq: Drop schedfreq governor
   * BACKPORT: schedutil: Reset cached freq if it is not in sync with next_freq
   * UPSTREAM: cpufreq: schedutil: Don't set next_freq to UINT_MAX
 .
   [ Chris Redpath ]
   * arch_timer: add error handling when the MPM global timer is cleared
   * sched/walt: Drop arch-specific timer access
   * trace:sched: Make util_avg in load_avg trace reflect PELT/WALT as used
   * sched/fair: remove task util from own cpu when placing waking task
   * sched/fair: ensure utilization signals are synchronized before use
   * cpufreq/schedutil: use boosted_cpu_util for PELT to match WALT
   * sched/tune: increase group count to 5
   * sched/tune: fix sched_energy_diff tracepoint
   * sched/tune: don't use schedtune before it is ready
   * schedstats/eas: guard properly to avoid breaking non-smp schedstats users
   * UPSTREAM: cpufreq: schedutil: Avoid indented labels
   * UPSTREAM: cpufreq: schedutil: enable fast switch earlier
   * UPSTREAM: cpufreq: schedutil: irq-work and mutex are only used in slow path
   * UPSTREAM: cpufreq: schedutil: move cached_raw_freq to struct sugov_policy
   * UPSTREAM: cpufreq: schedutil: Fix per-CPU structure initialization in sugov_start()
   * UPSTREAM: cpufreq: schedutil: Refactor sugov_next_freq_shared()
   * UPSTREAM: cpufreq: schedutil: Avoid reducing frequency of busy CPUs prematurely
   * UPSTREAM: cpufreq: schedutil: Trace frequency only if it has changed
   * sched/fair: Update signals of nohz cpus if we are going idle
   * sched/fair: Try to estimate possible idle states.
   * sched/fair: Add a backup_cpu to find_best_target
   * cpufreq/sched: Use cpu max freq rather than policy max
   * ANDROID: sched/fair: Select correct capacity state for energy_diff
   * cpufreq/sched: Consider max cpu capacity when choosing frequencies
   * BACKPORT: sched/fair: Make it possible to account fair load avg consistently
   * sched/fair: consider task utilization in group_norm_util()
   * sched/fair: prevent possible infinite loop in sched_group_energy
   * sched/fair: use *p to reference task_structs
   * ANDROID: Move schedtune en/dequeue before schedutil update triggers
   * arm64/topology: link arch_scale_min_freq_capacity to cpufreq
   * BACKPORT: ANDROID: Add hold functionality to schedtune CPU boost
 .
   [ Ionela Voinescu ]
   * sched: add arch_scale_min_freq_capacity to track minimum capacity caps
   * sched/fair: introduce minimum capacity capping sched feature
   * sched/fair: use min capacity when evaluating placement energy costs
   * sched/fair: use min capacity when evaluating idle backup cpus
   * sched/fair: use min capacity when evaluating active cpus
   * Revert "sched/fair: use min capacity when evaluating idle backup cpus"
   * Revert "sched/fair: use min capacity when evaluating active cpus"
   * cpufreq: add scaled minimum capacity tracking for policy changes
   * arm/topology: link arch_scale_min_freq_capacity to cpufreq
 .
   [ Dietmar Eggemann ]
   * sched/fair: Make load tracking frequency scale-invariant
   * sched/fair: Make utilization tracking CPU scale-invariant
   * sched/fair: Name utilization related data and functions consistently
   * sched/fair: Get rid of scaling utilization by capacity_orig
   * sched/fair: Defer calling scaling functions
   * sched: Store system-wide maximum cpu capacity in root domain
   * sched: Enable idle balance to pull single task towards cpu with higher capacity
   * sched: Introduce energy data structures
   * sched: Initialize energy data structures
   * arm: Cpu invariant scheduler load-tracking and capacity support
   * sched: Determine the current sched_group idle-state
   * sched: Consider a not over-utilized energy-aware system as balanced
   * sched: Update max cpu capacity in case of max frequency constraints
   * arm: Enable max freq invariant scheduler load-tracking and capacity support
   * arm64: Enable max freq invariant scheduler load-tracking and capacity support
   * sched: Do eas idle balance regardless of the rq avg idle value
   * DEBUG: sched: add energy procfs interface
   * arm: topology: Define TC2 energy and provide it to the scheduler
   * Revert "WIP: sched: Consider spare cpu capacity at task wake-up"
   * Partial Revert: "WIP: sched: Add cpu capacity awareness to wakeup balancing"
   * arm64: Set SD_ASYM_CPUCAPACITY sched_domain flag on DIE level
   * sched/fair: Do not force want_affine eq. true if EAS is enabled
   * sched/fair: Decommission energy_aware_wake_cpu()
   * Fixup!: sched/fair.c: Set SchedTune specific struct energy_env.task
   * EAS: sched/fair: Re-integrate 'honor sync wakeups' into wakeup path
   * sched/fair: Code !is_big_little path into select_energy_cpu_brute()
   * sched: Remove sysctl_sched_is_big_little
   * sched/core: Remove remnants of commit fd5c98da1a42
   * sched/core: Add first cpu w/ max/min orig capacity to root domain
   * sched/fair: Change cpu iteration order in find_best_target()
   * sched/fair: remove erroneous RCU_LOCKDEP_WARN from start_cpu()
   * sched/fair: refactor find_best_target() for simplicity
   * sched/fair: Simplify idle_idx handling in select_idle_sibling()
   * sched: EAS & 'single cpu per cluster'/cpu hotplug interoperability
   * sched/fair: Add eas (& cas) specific rq, sd and task stats
   * sched/fair: introduce an arch scaling function for max frequency capping
   * cpufreq: remove max frequency capping from scale_freq_capacity()
   * cpufreq: implement max frequency capping
   * arm: enable max frequency capping
   * arm64: enable max frequency capping
 .
   [ Quentin Perret ]
   * sched/fair: select the most energy-efficient CPU candidate on wake-up
   * Revert "arm64: Enable max freq invariant scheduler load-tracking and capacity support"
   * Revert "arm: Enable max freq invariant scheduler load-tracking and capacity support"
   * Revert "cpufreq: Max freq invariant scheduler load-tracking and cpu capacity support"
 .
   [ Srinath Sridharan ]
   * Fixing compilation errors in cpufreq_interactive.c due to EAS merge on to the default android-msm-marlin-3.18.
   * sched/cpufreq_sched: Consolidated update
   * sched: EAS: take cstate into account when selecting idle core
   * sched/tune: Add support for negative boost values
   * sched/walt: Accounting for number of irqs pending on each core
   * sched/tune: Introducing a new schedtune attribute prefer_idle
   * sched/fair: Picking cpus with low OPPs for tasks that prefer idle CPUs
   * sched/fair: Favor higher cpus only for boosted tasks
   * eas/sched/fair: Fixing comments in find_best_target.
   * sched/tune: Initialize raw_spin_lock in boosted_groups
   * ANDROID: sched/rt: rt cpu selection integration with EAS.
 .
   [ Steven Rostedt (VMware) ]
   * sched/rt: Use container_of() to get root domain in rto_push_irq_work_func()
   * sched/rt: Up the root domain ref count when passing it around via IPIs
 .
   [ Prateek Sood ]
   * cgroup/cpuset: remove circular dependency deadlock
 .
   [ Vikram Mulukutla ]
   * sched: Revert HMP and some MSM specific features
   * sched: walt: Leverage existing helper APIs to apply invariance
   * sched: walt: Correct WALT window size initialization
   * Revert "ANDROID: sched/tune: Initialize raw_spin_lock in boosted_groups"
   * sched: core: Fix possible hotplug race in set_cpus_allowed_ptr
   * cpufreq: schedutil: Fix sugov_start versus sugov_update_shared race
 .
   [ Vincent Guittot ]
   * sched: Add sched_avg::utilization_avg_contrib
   * sched: Remove frequency scaling from cpu_capacity
   * sched: Make scale_rt invariant with frequency
   * sched: Add struct rq::cpu_capacity_orig
   * sched: Calculate CPU's usage statistic and put it into struct sg_lb_stats::group_usage
   * sched: Replace capacity_factor by usage
   * sched: Remove unused struct sched_group_capacity::capacity_orig
   * sched: Add SD_PREFER_SIBLING for SMT level
   * sched: Move CFS tasks to CPUs with higher capacity
   * sched/fair: Implement update_blocked_averages() for CONFIG_FAIR_GROUP_SCHED=n
   * sched/fair: Fix nohz.next_balance update
   * sched: remove call of sched_avg_update from sched_rt_avg_update
   * sched: rt scheduler sets capacity requirement
   * UPSTREAM: sched/fair: Factorize attach/detach entity
   * BACKPORT: sched/fair: Factorize PELT update
   * UPSTREAM: sched/fair: Fix hierarchical order in rq->leaf_cfs_rq_list
   * UPSTREAM: sched/fair: Propagate load during synchronous attach/detach
   * UPSTREAM: sched/fair: Propagate asynchrous detach
   * UPSTREAM: sched/fair: Fix incorrect task group ->load_avg
   * UPSTREAM: sched/core: Fix group_entity's share update
   * UPSTREAM: sched/core: Fix find_idlest_group() for fork
   * sched: deadline: use deadline bandwidth in scale_rt_capacity
   * BACKPORT: sched/cgroup: Fix cpu_cgroup_fork() handling
   * UPSTREAM: sched/fair: Fix FTQ noise bench regression
 .
   [ Todd Poynor ]
   * ANDROID: sched/walt: make walt_ktime_suspended __read_mostly
 .
   [ Juri Lelli ]
   * sched/core: Check for available DL bandwidth in cpuset_cpu_inactive()
   * arm64: Cpu invariant scheduler load-tracking and capacity support
   * sched/fair: add triggers for OPP change requests
   * sched/{core,fair}: trigger OPP change request on fork()
   * sched/fair: cpufreq_sched triggers for load balancing
   * fixup! sched: scheduler-driven cpu frequency selection
   * fixup! sched/fair: jump to max OPP when crossing UP threshold
   * DEBUG: sched: add tracepoint for cpu/freq scale invariance
   * DEBUG: sched: add tracepoint for task load/util signals
   * DEBUG: sched: add tracepoint for CPU load/util signals
   * DEBUG: sched,cpufreq: add cpu_capacity change tracepoint
   * sched/fair: add tunable to force selection at cpu granularity
   * sched/cpufreq_sched: fix thermal capping events
   * sched/fair: call OPP update when going idle after migration
   * sched/walt: kill {min,max}_capacity
   * sched/cpufreq: make schedutil use WALT signal
   * UPSTREAM: cpufreq: schedutil: use now as reference when aggregating shared policy requests
   * trace/sched: add rq utilization signal for WALT
   * sched/deadline: Fix bandwidth check/update when migrating tasks between exclusive cpusets
 .
   [ Wanpeng Li ]
   * sched/fair: Fix stale overloaded status in the busiest group finding logic
   * sched: Move p->nr_cpus_allowed check to select_task_rq()
   * sched/deadline: Fix artificial overrun introduced by yield_task_dl()
   * sched/cputime: Fix prev steal time accouting during CPU hotplug
   * sched/deadline: Avoid pointless __setscheduler()
 .
   [ Kirill Tkhai ]
   * sched/fair: Fix sched_entity::avg::decay_count initialization
   * sched/deadline: Implement cancel_dl_timer() to use in switched_from_dl()
 .
   [ Frederic Weisbecker ]
   * nohz: Remove useless argument on tick_nohz_task_switch()
   * sched: Pull resched loop to __schedule() callers
 .
   [ Oleg Nesterov ]
   * sched: Kill task_preempt_count()
   * sched: Don't scan all-offline ->cpus_allowed twice if !CONFIG_CPUSETS
   * sched: Fix schedule_tail() to disable preemption
   * sched: Make finish_task_switch() return 'struct rq *'
 .
   [ Rik van Riel ]
   * sched, isolcpu: make cpu_isolated_map visible outside scheduler
   * sched/rt/nohz: Stop scheduler tick if running realtime task
 .
   [ Chris Metcalf ]
   * nohz: Add tick_nohz_full_add_cpus_to() API
 .
   [ Andy Lutomirski ]
   * UPSTREAM: sched/core: Allow putting thread_info into task_struct
 .
   [ Henrik Austad ]
   * sched/core: Make policy-testing consistent
 .
   [ Daniel Bristot de Oliveira ]
   * sched, tracing: Stop/start critical timings around the idle=poll idle loop
 .
   [ Waiman Long ]
   * sched/fair: Avoid redundant idle_cpu() call in update_sg_lb_stats()
 .
   [ Yao Dongdong ]
   * sched/core: Remove check of p->sched_class
   * sched: Check if we got a shallowest_idle_cpu before searching for least_loaded_cpu
 .
   [ Yuyang Du ]
   * sched/fair: Avoid pulling all tasks in idle balancing
   * sched/fair: Remove rq's runnable avg
   * sched/fair: Rewrite runnable load and utilization average tracking
   * sched/fair: Init cfs_rq's sched_entity load average
   * sched/fair: Remove task and group entity load when they are dead
   * sched/fair: Provide runnable_load_avg back to cfs_rq
   * sched/fair: Clean up load average references
   * sched/fair: Fix overly small weight for interactive group entities
   * sched/fair: Update task group's load_avg after task migration
   * sched/fair: Fix new task's load avg removed from source CPU in wake_up_new_task()
   * BACKPORT: sched/fair: Initiate a new task's util avg to a bounded value
   * sched: Fix odd values in effective_load() calculations
 .
   [ Konstantin Khlebnikov ]
   * sched/fair: Initialize throttle_count for new task-groups lazily
   * sched/fair: Do not announce throttled next buddy in dequeue_task_fair()
 .
   [ Tetsuo Handa ]
   * sched/fair: Fix RCU stall upon -ENOMEM in sched_create_group()
 .
   [ Thomas Gleixner ]
   * sched/cputime: Fix steal time accounting vs. CPU hotplug
   * sched: core: Use hrtimer_start[_expires]()
 .
   [ Nicholas Mc Guire ]
   * sched: Fix function declaration return type mismatch
 .
   [ Iulia Manda ]
   * sched: Refactor task_struct to use numa_faults instead of numa_* pointers
 .
   [ Tim Chen ]
   * sched/rt: Reduce rq lock contention by eliminating locking of non-feasible target
 .
   [ Omar Sandoval ]
   * sched/core: Fix regression in cpuset_cpu_inactive() for suspend
 .
   [ Borislav Petkov ]
   * sched/core: Drop debugging leftover trace_printk call
 .
   [ Olav Haugan ]
   * sched: Update task->on_rq when tasks are moving between runqueues
 .
   [ Zhiqiang Zhang ]
   * sched/deadline: Remove needless parameter in dl_runtime_exceeded()
 .
   [ Amit Pundir ]
   * sched/walt: include missing header for arm_timer_read_counter()
   * sched/walt: use do_div instead of division operator
   * ANDROID: sched/walt: fix build failure if FAIR_GROUP_SCHED=n
 .
   [ Ke Wang ]
   * sched: tune: Fix lacking spinlock initialization
   * sched: fix wrong truncation of walt_avg
   * sched: EAS: Fix the condition to distinguish energy before/after
   * sched: EAS: update trg_cpu to backup_cpu if no energy saving for target_cpu
   * sched: EAS: Fix the calculation of group util in group_idle_state()
   * sched: EAS/WALT: Don't take into account of running task's util
   * sched: EAS: Initialize push_task as NULL to avoid direct reference on out_unlock path
   * ANDROID: sched: EAS: check energy_aware() before calling select_energy_cpu_brute() in up-migrate path
   * trace: sched: Fix util_avg_walt in sched_load_avg_cpu trace
 .
   [ Guenter Roeck ]
   * BACKPORT: cgroup: Remove leftover instances of allow_attach
 .
   [ Steven Rostedt ]
   * sched/rt: Use IPI to trigger RT task push migration instead of pulling
   * sched/rt: Do not pull from current CPU if only one CPU to pull
 .
   [ Steven Rostedt (Red Hat) ]
   * sched/rt: Simplify the IPI based RT balancing logic
 .
   [ Abel Vesa ]
   * sched/core: Remove unused argument from init_[rt|dl]_rq()
 .
   [ Joonwoo Park ]
   * sched: walt: fix window misalignment when HZ=300
   * sched: deadline: WALT: account cumulative runnable avg
   * sched: WALT: fix broken cumulative runnable average accounting
   * sched: EAS/WALT: use cr_avg instead of prev_runnable_sum
   * sched: EAS: schedfreq: fix CPU util over estimation
   * sched: WALT: fix potential overflow
   * cpufreq: sched: WALT: don't apply capacity margin twice
   * sched: EAS/WALT: take into account of waking task's load
   * sched: EAS: fix incorrect energy delta calculation due to rounding error
   * sched: EAS: kill incorrect nohz idle cpu kick
   * sched: WALT: fix window mis-alignment
   * sched/fair: prevent meaningless active migration
   * cpufreq: sched: update capacity request upon tick always
   * sched: EAS/WALT: finish accounting prior to task_tick
   * sched: WALT: account cumulative window demand
   * sched: EAS: upmigrate misfit current task
 .
   [ Srivatsa Vaddagiri ]
   * sched: Introduce Window Assisted Load Tracking (WALT)
   * sched: Extend active balance to accept 'push_task' argument
 .
   [ Brendan Jackman ]
   * DEBUG: sched/fair: Fix missing sched_load_avg_cpu events
   * DEBUG: sched/fair: Fix sched_load_avg_cpu events for task_groups
   * Revert "sched/fair: ensure utilization signals are synchronized before use"
   * sched/fair: Sync task util before EAS wakeup
   * UPSTREAM: sched/fair: Force balancing on nohz balance if local group has capacity
   * BACKPORT: sched/fair: Move select_task_rq_fair slow-path into its own function
   * UPSTREAM: sched/fair: Remove unnecessary comparison with -1
   * BACKPORT: sched/fair: Fix find_idlest_group when local group is not allowed
   * UPSTREAM: sched/fair: Fix usage of find_idlest_group() when no groups are allowed
   * UPSTREAM: sched/fair: Fix usage of find_idlest_group() when the local group is idlest
   * UPSTREAM: sched/fair: Sync task util before slow-path wakeup
   * FROMLIST: sched/fair: Use wake_q length as a hint for wake_wide
   * sched/core: Warn if ENERGY_AWARE is enabled but data is missing
 .
   [ xiaofeng.yan ]
   * sched/core: Remove a parameter in the migrate_task_rq() function
 .
   [ Sasha Levin ]
   * sched/core: Remove false-positive warning from wake_up_process()
 .
   [ Leo Yan ]
   * sched/fair: Polish comments for LOAD_AVG_MAX
   * sched/fair: Remove unnecessary parameter for group_classify()
   * sched/fair: kick nohz idle balance for misfit task
   * cpufreq: schedutil: clamp util to CPU maximum capacity
   * sched/fair: remove useless variable in find_best_target
 .
   [ Russ Weight ]
   * sched/tune: access schedtune_initialized under CGROUP_SCHEDTUNE
 .
   [ Matt Fleming ]
   * sched/loadavg: Avoid loadavg spikes caused by delayed NO_HZ accounting
 .
   [ Morten Rasmussen ]
   * sched: Track group sched_entity usage contributions
   * sched: Make sched entity usage tracking scale-invariant
   * sched/fair: Convert arch_scale_cpu_capacity() from weak function to #define
   * sched/fair: Initialize task load and utilization before placing task on rq
   * sched: Add cpu capacity awareness to wakeup balancing
   * sched: Consider spare cpu capacity at task wake-up
   * sched: Prevent unnecessary active balance of single task in sched group
   * sched: Make energy awareness a sched feature
   * arm: Update arch_scale_cpu_capacity() to reflect change to define
   * sched: Introduce SD_SHARE_CAP_STATES sched_domain flag
   * sched: Compute cpu capacity available at current frequency
   * sched: Relocated cpu_util() and change return type
   * sched: Highest energy aware balancing sched_domain level pointer
   * sched: Calculate energy consumption of sched_group
   * sched: Extend sched_group_energy to test load-balancing decisions
   * sched: Estimate energy impact of scheduling decisions
   * sched: Add over-utilization/tipping point indicator
   * sched, cpuidle: Track cpuidle state index in the scheduler
   * sched: Energy-aware wake-up task placement
   * sched: Disable energy-unfriendly nohz kicks
   * sched: Add per-cpu max capacity to sched_group_capacity
   * sched: Add group_misfit_task load-balance type
   * sched: Consider misfit tasks when load-balancing
   * UPSTREAM: sched/core: Fix power to capacity renaming in comment
   * BACKPORT: sched/fair: Make the use of prev_cpu consistent in the wakeup path
   * UPSTREAM: sched/fair: Optimize find_idlest_cpu() when there is no choice
   * UPSTREAM: sched/core: Remove unnecessary NULL-pointer check
   * UPSTREAM: sched/core: Introduce SD_ASYM_CPUCAPACITY sched_domain topology flag
   * UPSTREAM: sched/core: Pass child domain into sd_init()
   * UPSTREAM: sched/core: Enable SD_BALANCE_WAKE for asymmetric capacity systems
   * UPSTREAM: sched/fair: Let asymmetric CPU configurations balance at wake-up
   * UPSTREAM: sched/fair: Compute task/cpu utilization at wake-up correctly
   * UPSTREAM: sched/fair: Consider spare capacity in find_idlest_group()
   * UPSTREAM: sched/fair: Add per-CPU min capacity to sched_group_capacity
   * UPSTREAM: sched/fair: Avoid pulling tasks from non-overloaded higher capacity groups
   * UPSTREAM: sched/fair: Fix incorrect comment for capacity_margin
   * sched/fair: Add energy_diff dead-zone margin
   * sched/fair: Energy-aware wake-up task placement
   * sched/fair: Fix sched_group_energy() to support per-cpu capacity states
 .
   [ Valentin Schneider ]
   * sched/fair: discount task contribution to find CPU with lowest utilization
 .
   [ Byungchul Park ]
   * sched/fair: Fix a comment reflecting function name change
   * sched/fair: Factor out the {at,de}taching of the per entity load {to,from} the runqueue
   * sched: Ensure a task has a non-normalized vruntime when returning back to CFS
   * sched/fair: Fix switched_to_fair()'s per entity load tracking
   * sched/fair: Have task_move_group_fair() also detach entity load from the old runqueue
   * sched/fair: Have task_move_group_fair() unconditionally add the entity load to the runqueue
   * sched/fair: Unify switched_{from,to}_fair() and task_move_group_fair()
 .
   [ Steve Muckle ]
   * sched/fair: jump to max OPP when crossing UP threshold
   * sched/cpufreq_sched: add trace events
   * sched: backport cpufreq hooks from 4.9-rc4
   * BACKPORT: cpufreq: schedutil: New governor based on scheduler utilization data
   * sched/cpufreq: fix tunables for schedfreq governor
   * sched: cpufreq: use rt_avg as estimate of required RT CPU capacity
   * cpufreq: schedutil: add up/down frequency transition rate limits
 .
   [ Petr Mladek ]
   * BACKPORT: kthread: allow to cancel kthread work
 .
   [ Ricky Liang ]
   * FIXUP: sched: scheduler-driven cpu frequency selection
 .
   [ Joseph Lo ]
   * CHROMIUM: sched: update the average of nr_running
 .
   [ Michael Turquette ]
   * sched: scheduler-driven cpu frequency selection
 .
   [ Jon Medhurst ]
   * arm: Fix #if/#ifdef typo in topology.c
 .
   [ Robin Randhawa ]
   * sched: Support for extracting EAS energy costs from DT
   * arm64, topology: Updates to use DT bindings for EAS costing data
 .
   [ Mike Galbraith ]
   * sched/fair: Beef up wake_wide()
 .
   [ Boqun Feng ]
   * sched/fair: Clean up the __sched_period() code
 .
   [ Jason Low ]
   * sched, timer: Convert usages of ACCESS_ONCE() in the scheduler to READ_ONCE()/WRITE_ONCE()
 .
   [ Preeti U Murthy ]
   * sched: Improve load balancing in the presence of idle CPUs
 .
   [ Xunlei Pang ]
   * sched/fair: Fix the dealing with decay_count in __synchronize_entity_decay()
 .
   [ Junjie Wu ]
   * Revert "cpufreq: interactive: Use wake_up_process_no_notif to wake up tasks"
 .
   [ Michael Adisumarta ]
   * msm: ipa: fix race condition around sys->len
   * msm: ipa: dynamic memory leak fix
 .
   [ Shihuan Liu ]
   * msm: ipa: add null terminator
Checksums-Sha1:
 dbd9d070606507900954eb9601191dd0e430dc5a 9100 linux-android-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.buildinfo
 4307fa1019e34409eaf648afda5a75f0bed9f70b 54106240 linux-bootimage-3.18-140-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 4057b0844ddad7f2a23cb08139406b26ee9ce28b 33660 linux-bootimage-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 490dab1419eb735f8221dcd3e7448fd0e86be43d 7110632 linux-headers-3.18-140-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 6111e1c454c548a27adcd16d3e5e18ddaec8bb55 33648 linux-headers-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 a31f4f01e53e6ab48a225f27fc81fcd9f76aeee6 11536188 linux-image-3.18-140-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 92e1569816731e27844932de2291218dc23e095e 33644 linux-image-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
Checksums-Sha256:
 00aed1915722ffa296a25ebfec2a2cc000b46f857fbdda0decdf19a02ee84705 9100 linux-android-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.buildinfo
 7623aa260285442ed4d6dbcba309c07a7e97adcecb5dfbfd1ccf8667a873b1b2 54106240 linux-bootimage-3.18-140-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 0774e2d33d9b8db67a0d78bc132f5411c5e390abab31a06dcd3034a544e08f0d 33660 linux-bootimage-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 3785cfa765548ea0debc44dac6744cc212ad1c5b82506df8261edaebff1831be 7110632 linux-headers-3.18-140-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 4a1a4d046d558a43bd9dadedb072705df2060f0d6556df0acc6e9ff1f69c239b 33648 linux-headers-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 9510e4a60133837f50484fdb9208bafe46d2e76bbd314c56de274a0b8056df11 11536188 linux-image-3.18-140-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 c2bcc79ab860aaf52967e1a341794c85b0cdc530b44fb3f8c1617a693a9b82e4 33644 linux-image-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
Files:
 295bf465a77ea788666846ff3a37cbec 9100 kernel optional linux-android-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.buildinfo
 32c0383c8f5710319fbe886ac9208fa2 54106240 kernel optional linux-bootimage-3.18-140-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 6c24bb88b718a08ebeeebc3f7ed67f3e 33660 kernel optional linux-bootimage-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 4d77099078d5f5cc2746f6ec9a83d693 7110632 kernel optional linux-headers-3.18-140-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 bb96e272c96499e096bfccab960381c8 33648 kernel optional linux-headers-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 c602f916f1862d75a4d26899d79e76a9 11536188 kernel optional linux-image-3.18-140-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
 172cd490ee22d6d52a0c398993eab400 33644 kernel optional linux-image-htc-oce_0.0.0+git20240810110455.86d5787.droidian_arm64.deb
